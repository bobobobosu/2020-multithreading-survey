{"version":3,"file":"worker.js","sources":["../../../output/worker-thread/strings.js","../../../output/worker-thread/nodes.js","../../../output/worker-thread/MutationTransfer.js","../../../output/worker-thread/MutationObserver.js","../../../output/worker-thread/dom/ParentNode.js","../../../output/utils.js","../../../output/worker-thread/dom/DOMTokenList.js","../../../output/third_party/html-parser/html-parser.js","../../../output/worker-thread/dom/Element.js","../../../output/worker-thread/serializeTransferrableObject.js","../../../output/worker-thread/canvas/canvas-utils.js","../../../output/worker-thread/Storage.js","../../../output/worker-thread/long-task.js","../../../output/worker-thread/phase.js","../../../output/worker-thread/amp/amp.js","../../../output/worker-thread/function.js","../../../output/worker-thread/dom/Node.js","../../../output/worker-thread/dom/CharacterData.js","../../../output/worker-thread/dom/Comment.js","../../../output/worker-thread/amp/delete-globals.js","../../../output/worker-thread/dom/matchElements.js","../../../output/worker-thread/dom/Attr.js","../../../output/worker-thread/css/CSSStyleDeclaration.js","../../../output/worker-thread/dom/enhanceElement.js","../../../output/worker-thread/Event.js","../../../output/transfer/TransferrableNodes.js","../../../output/worker-thread/dom/HTMLElement.js","../../../output/worker-thread/dom/HTMLAnchorElement.js","../../../output/worker-thread/dom/HTMLButtonElement.js","../../../output/worker-thread/canvas/CanvasGradient.js","../../../output/worker-thread/canvas/CanvasPattern.js","../../../output/worker-thread/canvas/OffscreenCanvasPolyfill.js","../../../output/worker-thread/canvas/FakeNativeCanvasPattern.js","../../../output/worker-thread/canvas/CanvasRenderingContext2D.js","../../../output/worker-thread/dom/HTMLCanvasElement.js","../../../output/worker-thread/dom/HTMLDataElement.js","../../../output/worker-thread/dom/HTMLDataListElement.js","../../../output/worker-thread/dom/HTMLEmbedElement.js","../../../output/worker-thread/dom/HTMLFormControlsMixin.js","../../../output/worker-thread/dom/HTMLFieldSetElement.js","../../../output/worker-thread/dom/HTMLFormElement.js","../../../output/worker-thread/dom/HTMLIFrameElement.js","../../../output/worker-thread/dom/HTMLImageElement.js","../../../output/worker-thread/dom/HTMLInputLabelsMixin.js","../../../output/worker-thread/dom/HTMLInputElement.js","../../../output/worker-thread/dom/HTMLLabelElement.js","../../../output/worker-thread/dom/HTMLLinkElement.js","../../../output/worker-thread/dom/HTMLMapElement.js","../../../output/worker-thread/dom/HTMLMeterElement.js","../../../output/worker-thread/dom/HTMLModElement.js","../../../output/worker-thread/dom/HTMLOListElement.js","../../../output/worker-thread/dom/HTMLOptionElement.js","../../../output/worker-thread/dom/HTMLProgressElement.js","../../../output/worker-thread/dom/HTMLQuoteElement.js","../../../output/worker-thread/dom/HTMLScriptElement.js","../../../output/worker-thread/dom/HTMLSelectElement.js","../../../output/worker-thread/dom/HTMLSourceElement.js","../../../output/worker-thread/dom/HTMLStyleElement.js","../../../output/worker-thread/dom/HTMLTableCellElement.js","../../../output/worker-thread/dom/HTMLTableColElement.js","../../../output/worker-thread/dom/HTMLTableElement.js","../../../output/worker-thread/dom/HTMLTableRowElement.js","../../../output/worker-thread/dom/HTMLTableSectionElement.js","../../../output/worker-thread/dom/HTMLTimeElement.js","../../../output/worker-thread/dom/Text.js","../../../output/worker-thread/dom/DocumentFragment.js","../../../output/worker-thread/dom/Document.js","../../../output/worker-thread/SyncValuePropagation.js","../../../output/worker-thread/ResizePropagation.js","../../../output/worker-thread/AnimationFrame.js","../../../output/worker-thread/dom/SVGElement.js","../../../output/worker-thread/index.amp.js","../../../output/worker-thread/initialize.js","../../../output/worker-thread/initialize-storage.js"],"sourcesContent":["let count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Stores a string in mapping and returns the index of the location.\n * @param value string to store\n * @return location in map\n */\nexport function store(value) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (mapping.has(value)) {\n        // Safe to cast since we verified the mapping contains the value\n        return mapping.get(value);\n    }\n    mapping.set(value, count);\n    transfer.push(value);\n    return count++;\n}\n/**\n * Retrieve the index for a string (mostly used for tests).\n * @param value string value we need to know the index of\n * @returns index in the map for the string\n */\nexport function getForTesting(value) {\n    return mapping.get(value);\n}\nexport function getForTestingPartial(value) {\n    const found = Array.from(mapping.keys()).find((str) => str.includes(value));\n    if (found) {\n        return mapping.get(found);\n    }\n}\n/**\n * Returns strings registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const strings = transfer;\n    transfer = [];\n    return strings;\n}\n//# sourceMappingURL=strings.js.map","import { phase } from './phase';\nlet count = 0;\nlet transfer = [];\nconst mapping = new Map();\n/**\n * Override the store for a node during the initialization phase.\n * @param node Node to store and modify with index\n * @param override Override number to use as the identifier.\n *\n * NOTE: THIS IS ONLY TO BE USED DURING INITIALIZATION.\n */\nexport function storeOverride(node, override) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (phase === 0 /* Initializing */) {\n        mapping.set((node[7 /* index */] = override), node);\n        count = Math.max(count, override);\n    }\n    return override;\n}\n/**\n * Stores a node in mapping, and makes the index available on the Node directly.\n * @param node Node to store and modify with index\n * @return index Node was stored with in mapping\n */\nexport function store(node) {\n    // Server version of the lib never transfers.\n    if (process.env.SERVER) {\n        return 0;\n    }\n    if (node[7 /* index */] !== undefined) {\n        return node[7 /* index */];\n    }\n    mapping.set((node[7 /* index */] = ++count), node);\n    if (phase > 0 /* Initializing */) {\n        // After Initialization, include all future dom node creation into the list for next transfer.\n        transfer.push(node);\n    }\n    return count;\n}\n/**\n * Retrieves a node based on an index.\n * @param index location in map to retrieve a Node for\n * @return either the Node represented in index position, or null if not available.\n */\nexport function get(index) {\n    // mapping has a 1 based index, since on first store we ++count before storing.\n    return (!!index && mapping.get(index)) || null;\n}\n/**\n * Returns nodes registered but not yet transferred.\n * Side effect: Resets the transfer array to default value, to prevent passing the same values multiple times.\n */\nexport function consume() {\n    const copy = transfer;\n    transfer = [];\n    return copy;\n}\n//# sourceMappingURL=nodes.js.map","import { consume as consumeNodes } from './nodes';\nimport { consume as consumeStrings } from './strings';\nimport { phase, set as setPhase } from './phase';\nlet pending = false;\nlet pendingMutations = [];\n// TODO(choumx): Change `mutation` to Array<Uint16> to prevent casting errors e.g. integer underflow, precision loss.\nexport function transfer(document, mutation) {\n    if (process.env.SERVER) {\n        return;\n    }\n    if (phase > 0 /* Initializing */ && document[58 /* allowTransfer */]) {\n        pending = true;\n        pendingMutations = pendingMutations.concat(mutation);\n        Promise.resolve().then((_) => {\n            if (pending) {\n                const nodes = new Uint16Array(consumeNodes().reduce((acc, node) => acc.concat(node[8 /* creationFormat */]), [])).buffer;\n                const mutations = new Uint16Array(pendingMutations).buffer;\n                document.postMessage({\n                    [54 /* phase */]: phase,\n                    [12 /* type */]: phase === 2 /* Mutating */ ? 3 /* MUTATE */ : 2 /* HYDRATE */,\n                    [37 /* nodes */]: nodes,\n                    [41 /* strings */]: consumeStrings(),\n                    [36 /* mutations */]: mutations,\n                }, [nodes, mutations]);\n                pendingMutations = [];\n                pending = false;\n                setPhase(2 /* Mutating */);\n            }\n        });\n    }\n}\n//# sourceMappingURL=MutationTransfer.js.map","import { transfer } from './MutationTransfer';\nconst observers = [];\nlet pendingMutations = false;\n/**\n * @param observerTarget\n * @param target\n */\nconst matchesIndex = (observerTarget, target) => {\n    return !!observerTarget && observerTarget[7 /* index */] === target[7 /* index */];\n};\n/**\n * @param observer\n * @param record\n */\nconst pushMutation = (observer, record) => {\n    observer.pushRecord(record);\n    if (!pendingMutations) {\n        pendingMutations = true;\n        Promise.resolve().then(() => {\n            pendingMutations = false;\n            observers.forEach((observer) => observer.callback(observer.takeRecords()));\n        });\n    }\n};\n/**\n * @param document\n * @param record\n * @param transferable\n */\nexport function mutate(document, record, transferable) {\n    // Post-message `transferable` to the main thread to apply mutations.\n    transfer(document, transferable);\n    // The MutationRecord is only used for external callers of MutationObserver.\n    observers.forEach((observer) => {\n        for (let t = record.target; t; t = t.parentNode) {\n            if (matchesIndex(observer.target, t)) {\n                pushMutation(observer, record);\n                break;\n            }\n        }\n    });\n}\nexport class MutationObserver {\n    callback;\n    [42 /* records */] = [];\n    target;\n    options;\n    constructor(callback) {\n        this.callback = callback;\n    }\n    /**\n     * Register the MutationObserver instance to observe a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @param target Node to observe DOM mutations\n     */\n    observe(target, options) {\n        this.disconnect();\n        this.target = target;\n        this.options = options || {};\n        observers.push(this);\n    }\n    /**\n     * Stop the MutationObserver instance from observing a Nodes mutations.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     */\n    disconnect() {\n        this.target = null;\n        const index = observers.indexOf(this);\n        if (index >= 0) {\n            observers.splice(index, 1);\n        }\n    }\n    /**\n     * Empties the MutationObserver instance's record queue and returns what was in there.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n     * @return Mutation Records stored on this MutationObserver instance.\n     */\n    takeRecords() {\n        const records = this[42 /* records */];\n        return records.splice(0, records.length);\n    }\n    /**\n     * NOTE: This method doesn't exist on native MutationObserver.\n     * @param record MutationRecord to store for this instance.\n     */\n    pushRecord(record) {\n        this[42 /* records */].push(record);\n    }\n}\n//# sourceMappingURL=MutationObserver.js.map","import { elementPredicate, matchAttrReference, matchChildrenElements } from './matchElements';\nimport { Node } from './Node';\nimport { containsIndexOf, toLower } from '../../utils';\n/*\nNormally ParentNode is implemented as a mixin, but since the Node class is an abstract\nthis makes it hard to build a mixin that recieves a base of the representations of Node needing\nthe mixed in functionality.\n\n// Partially implemented Mixin Methods\n// Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n// - Element selectors\n// - ID selectors\n// - Class selectors\n// - Attribute selectors\n// Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n// Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n*/\nexport class ParentNode extends Node {\n    /**\n     * Getter returning children of an Element that are Elements themselves.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/children\n     * @return Element objects that are children of this ParentNode, omitting all of its non-element nodes.\n     */\n    get children() {\n        return this.childNodes.filter(elementPredicate);\n    }\n    /**\n     * Getter returning the number of child elements of a Element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\n     * @return number of child elements of the given Element.\n     */\n    get childElementCount() {\n        return this.children.length;\n    }\n    /**\n     * Getter returning the first Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/firstElementChild\n     * @return first childNode that is also an element.\n     */\n    get firstElementChild() {\n        return this.childNodes.find(elementPredicate) || null;\n    }\n    /**\n     * Getter returning the last Element in Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/lastElementChild\n     * @return first childNode that is also an element.\n     */\n    get lastElementChild() {\n        const children = this.children;\n        return children[children.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n     * @param selector the selector we are trying to match for.\n     * @return Element with matching selector.\n     */\n    querySelector(selector) {\n        const matches = querySelectorAll(this, selector);\n        return matches ? matches[0] : null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n     * @param selector the selector we are trying to match for.\n     * @return Elements with matching selector.\n     */\n    querySelectorAll(selector) {\n        return querySelectorAll(this, selector);\n    }\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n * @param node the node to filter results under.\n * @param selector the selector we are trying to match for.\n * @return Element with matching selector.\n */\nfunction querySelectorAll(node, selector) {\n    // As per spec: https://dom.spec.whatwg.org/#scope-match-a-selectors-string\n    // First, parse the selector\n    const selectorBracketIndexes = [selector.indexOf('['), selector.indexOf(']')];\n    const selectorHasAttr = containsIndexOf(selectorBracketIndexes[0]) && containsIndexOf(selectorBracketIndexes[1]);\n    const elementSelector = selectorHasAttr ? selector.substring(0, selectorBracketIndexes[0]) : selector;\n    const attrSelector = selectorHasAttr ? selector.substring(selectorBracketIndexes[0], selectorBracketIndexes[1] + 1) : null;\n    // TODO(nainar): Parsing selectors is needed when we add in more complex selectors.\n    // Second, find all the matching elements on the Document\n    let matcher;\n    if (selector[0] === '[') {\n        matcher = (element) => matchAttrReference(selector, element);\n    }\n    else if (elementSelector[0] === '#') {\n        matcher = selectorHasAttr\n            ? (element) => element.id === elementSelector.substr(1) && matchAttrReference(attrSelector, element)\n            : (element) => element.id === elementSelector.substr(1);\n    }\n    else if (elementSelector[0] === '.') {\n        matcher = selectorHasAttr\n            ? (element) => element.classList.contains(elementSelector.substr(1)) && matchAttrReference(attrSelector, element)\n            : (element) => element.classList.contains(elementSelector.substr(1));\n    }\n    else {\n        matcher = selectorHasAttr\n            ? (element) => element.localName === toLower(elementSelector) && matchAttrReference(attrSelector, element)\n            : (element) => element.localName === toLower(elementSelector);\n    }\n    // Third, filter to return elements that exist within the querying element's descendants.\n    return matcher\n        ? matchChildrenElements(node[45 /* scopingRoot */], matcher).filter((element) => node !== element && node.contains(element))\n        : [];\n}\n//# sourceMappingURL=ParentNode.js.map","export const toLower = (value) => value.toLowerCase();\nexport const toUpper = (value) => value.toUpperCase();\nexport const containsIndexOf = (pos) => pos !== -1;\nexport const keyValueString = (key, value) => `${key}=\"${value}\"`;\n//# sourceMappingURL=utils.js.map","import { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nconst WHITESPACE_REGEX = /\\s/;\n/**\n * Synchronizes the string getter/setter with the actual DOMTokenList instance.\n * @param defineOn Element or class extension to define getter/setter pair for token list access.\n * @param accessorKey Key used to access DOMTokenList directly from specific element.\n * @param propertyName Key used to access DOMTokenList as string getter/setter.\n */\nexport function synchronizedAccessor(defineOn, accessorKey, propertyName) {\n    Object.defineProperty(defineOn.prototype, propertyName, {\n        enumerable: true,\n        configurable: true,\n        get() {\n            return this[accessorKey].value;\n        },\n        set(value) {\n            this[accessorKey].value = value;\n        },\n    });\n}\nexport class DOMTokenList {\n    [43 /* tokens */] = [];\n    [13 /* target */];\n    [18 /* attributeName */];\n    [44 /* storeAttribute */];\n    /**\n     * The DOMTokenList interface represents a set of space-separated tokens.\n     * It is indexed beginning with 0 as with JavaScript Array objects and is case-sensitive.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList\n     * @param target Specific Element instance to modify when value is changed.\n     * @param attributeName Name of the attribute used by Element to access DOMTokenList.\n     */\n    constructor(target, attributeName) {\n        this[13 /* target */] = target;\n        this[18 /* attributeName */] = attributeName;\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @return string representation of tokens (space delimitted).\n     */\n    get value() {\n        return this[43 /* tokens */].join(' ');\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/length\n     * @return integer representing the number of objects stored in the object.\n     */\n    get length() {\n        return this[43 /* tokens */].length;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/value\n     * @param collection String of values space delimited to replace the current DOMTokenList with.\n     */\n    set value(collection) {\n        const oldValue = this.value;\n        const newValue = collection.trim();\n        // Replace current tokens with new tokens.\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...(newValue !== '' ? newValue.split(/\\s+/) : ''));\n        this[67 /* mutated */](oldValue, newValue);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/item\n     * @param index number from DOMTokenList entities to retrieve value of\n     * @return value stored at the index requested, or undefined if beyond known range.\n     */\n    item(index) {\n        return this[43 /* tokens */][index];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/contains\n     * @param token value the DOMTokenList is tested for.\n     * @return boolean indicating if the token is contained by the DOMTokenList.\n     */\n    contains(token) {\n        return this[43 /* tokens */].includes(token);\n    }\n    /**\n     * Add a token or tokens to the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/add\n     * @param tokens each token is a string to add to a TokenList.\n     */\n    add(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].concat(tokens)));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Remove a token or tokens from the list.\n     * Note: All duplicates are removed, and the first token's position with the value is preserved.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/remove\n     * @param tokens each token is a string to remove from a TokenList.\n     */\n    remove(...tokens) {\n        const oldValue = this.value;\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...new Set(this[43 /* tokens */].filter((token) => !tokens.includes(token))));\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/replace\n     * @param token\n     * @param newToken\n     */\n    replace(token, newToken) {\n        if (!this[43 /* tokens */].includes(token)) {\n            return;\n        }\n        const oldValue = this.value;\n        const set = new Set(this[43 /* tokens */]);\n        if (token !== newToken) {\n            set.delete(token);\n            if (newToken !== '') {\n                set.add(newToken);\n            }\n        }\n        this[43 /* tokens */].splice(0, this[43 /* tokens */].length, ...set);\n        this[67 /* mutated */](oldValue, this.value);\n    }\n    /**\n     * Adds or removes a token based on its presence in the token list.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/toggle\n     * @param token string to add or remove from the token list\n     * @param force changes toggle into a one way-only operation. true => token added. false => token removed.\n     * @return true if the token is in the list following mutation, false if not.\n     */\n    toggle(token, force) {\n        if (WHITESPACE_REGEX.test(token)) {\n            throw new TypeError('Uncaught DOMException');\n        }\n        if (!this[43 /* tokens */].includes(token)) {\n            if (force === undefined || !!force) {\n                // Note, this will add the token if force is undefined (not passed into the method), or truthy.\n                this.add(token);\n            }\n            return true;\n        }\n        else if (!force) {\n            // Note, this will remove the token if force is undefined (not passed into the method), or falsey.\n            this.remove(token);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Report tokenList mutations to MutationObserver.\n     * @param oldValue value before mutation\n     * @param value value after mutation\n     * @private\n     */\n    [67 /* mutated */](oldValue, value) {\n        this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, this[18 /* attributeName */], value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: this[18 /* attributeName */],\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString(this[18 /* attributeName */]),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=DOMTokenList.js.map","import { SVG_NAMESPACE, HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { toLower, toUpper } from '../../utils';\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nconst kMarkupPattern = /<!--([^]*)-->|<(\\/?)([a-z][-.0-9_a-z]*)([^>]*?)(\\/?)>/gi;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\nconst kAttributePattern = /(^|\\s)([^\\s\"'>\\/=]+)\\s*=\\s*(\"([^\"]+)\"|'([^']+)'|(\\S+))/gi;\nconst kSelfClosingElements = {\n    AREA: true,\n    BASE: true,\n    BR: true,\n    COL: true,\n    HR: true,\n    IMG: true,\n    INPUT: true,\n    LINK: true,\n    META: true,\n    PARAM: true,\n    SOURCE: true,\n    TRACK: true,\n    WBR: true,\n};\nconst kElementsClosedByOpening = {\n    LI: { LI: true },\n    DT: { DT: true, DD: true },\n    DD: { DD: true, DT: true },\n    P: {\n        ADDRESS: true,\n        ARTICLE: true,\n        ASIDE: true,\n        BLOCKQUOTE: true,\n        DETAILS: true,\n        DIV: true,\n        DL: true,\n        FIELDSET: true,\n        FIGCAPTION: true,\n        FIGURE: true,\n        FOOTER: true,\n        FORM: true,\n        H1: true,\n        H2: true,\n        H3: true,\n        H4: true,\n        H5: true,\n        H6: true,\n        HEADER: true,\n        HR: true,\n        MAIN: true,\n        NAV: true,\n        OL: true,\n        P: true,\n        PRE: true,\n        SECTION: true,\n        TABLE: true,\n        UL: true,\n    },\n    RT: { RT: true, RP: true },\n    RP: { RT: true, RP: true },\n    OPTGROUP: { OPTGROUP: true },\n    OPTION: { OPTION: true, OPTGROUP: true },\n    THEAD: { TBODY: true, TFOOT: true },\n    TBODY: { TBODY: true, TFOOT: true },\n    TR: { TR: true },\n    TD: { TD: true, TH: true },\n    TH: { TD: true, TH: true },\n};\nconst kElementsClosedByClosing = {\n    LI: { UL: true, OL: true },\n    A: { DIV: true },\n    B: { DIV: true },\n    I: { DIV: true },\n    P: { DIV: true },\n    TD: { TR: true, TABLE: true },\n    TH: { TR: true, TABLE: true },\n};\nconst kBlockTextElements = {\n    SCRIPT: true,\n    NOSCRIPT: true,\n    STYLE: true,\n    PRE: true,\n};\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data HTML in string format.\n * @param {!Element} root The element to use as root.\n * @return {Element}      root element\n */\nexport function parse(data, rootElement) {\n    const ownerDocument = rootElement.ownerDocument;\n    const root = ownerDocument.createElementNS(rootElement.namespaceURI, rootElement.localName);\n    let currentParent = root;\n    let currentNamespace = root.namespaceURI;\n    const stack = [root];\n    let lastTextPos = 0;\n    let match;\n    data = '<q>' + data + '</q>';\n    const tagsClosed = [];\n    if (currentNamespace !== SVG_NAMESPACE && currentNamespace !== HTML_NAMESPACE) {\n        throw new Error('Namespace not supported: ' + currentNamespace);\n    }\n    while ((match = kMarkupPattern.exec(data))) {\n        const commentContents = match[1]; // <!--contents-->\n        const beginningSlash = match[2]; // ... </ ...\n        const tagName = match[3];\n        const matchAttributes = match[4];\n        const endSlash = match[5]; // ... /> ...\n        if (lastTextPos < match.index) {\n            // if has content\n            const text = data.slice(lastTextPos, match.index);\n            currentParent.appendChild(ownerDocument.createTextNode(decodeEntities(text)));\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        if (commentContents !== undefined) {\n            // this is a comment\n            currentParent.appendChild(ownerDocument.createComment(commentContents));\n            continue;\n        }\n        const normalizedTagName = toUpper(tagName);\n        if (normalizedTagName === 'SVG') {\n            currentNamespace = beginningSlash ? HTML_NAMESPACE : SVG_NAMESPACE;\n        }\n        if (!beginningSlash) {\n            // not </ tags\n            if (!endSlash && kElementsClosedByOpening[currentParent.tagName]) {\n                if (kElementsClosedByOpening[currentParent.tagName][normalizedTagName]) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                }\n            }\n            const childToAppend = ownerDocument.createElementNS(currentNamespace, currentNamespace === HTML_NAMESPACE ? toLower(tagName) : tagName);\n            for (let attMatch; (attMatch = kAttributePattern.exec(matchAttributes));) {\n                const attrName = attMatch[2];\n                const attrValue = attMatch[4] || attMatch[5] || attMatch[6];\n                childToAppend.setAttribute(attrName, attrValue);\n            }\n            currentParent = currentParent.appendChild(childToAppend);\n            stack.push(currentParent);\n            if (kBlockTextElements[normalizedTagName]) {\n                // a little test to find next </script> or </style> ...\n                const closeMarkup = '</' + toLower(normalizedTagName) + '>';\n                const index = data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                if (index == -1) {\n                    throw new Error('Close markup not found.');\n                }\n                else {\n                    kMarkupPattern.lastIndex = index;\n                }\n            }\n        }\n        if (tagName === 'foreignObject') {\n            currentNamespace = beginningSlash ? SVG_NAMESPACE : HTML_NAMESPACE;\n        }\n        if (beginningSlash || endSlash || kSelfClosingElements[normalizedTagName]) {\n            // </ or /> or <br> etc.\n            while (true) {\n                if (stack.length <= 1) {\n                    break;\n                }\n                if (toUpper(currentParent.nodeName) == normalizedTagName) {\n                    stack.pop();\n                    currentParent = arr_back(stack);\n                    break;\n                }\n                else {\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[currentParent.tagName]) {\n                        if (kElementsClosedByClosing[currentParent.tagName][normalizedTagName]) {\n                            stack.pop();\n                            currentParent = arr_back(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    for (const node of stack) {\n        if (tagsClosed[tagsClosed.length - 1] == node.nodeName) {\n            stack.pop();\n            tagsClosed.pop();\n            currentParent = arr_back(stack);\n        }\n        else\n            break;\n    }\n    const valid = stack.length === 1;\n    if (!valid) {\n        throw new Error('Attempting to parse invalid HTML content.');\n    }\n    const wrapper = root.firstChild;\n    if (wrapper) {\n        wrapper.parentNode = null;\n        wrapper.childNodes.forEach((node) => {\n            node.parentNode = null;\n        });\n        return wrapper;\n    }\n    throw new Error('Attempting to parse invalid HTML.');\n}\n/**\n * Decodes HTML Entities.\n * Currently only works for numeric entities, as well as the 4 named entities\n * required for encoding HTML: &, \", <, >.\n * See https://developer.mozilla.org/en-US/docs/Glossary/Entity.\n *\n * TODO: create solution for other named entities.\n */\nconst RESERVED_CHARACTERS = {\n    __proto__: null,\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    quot: '\"',\n};\nfunction decodeEntities(html) {\n    return html.replace(/&(?:(#x?[\\da-f]+)|([\\w]+));?/gi, function (s, numericEntity, namedEntity) {\n        // Numeric entity\n        if (numericEntity) {\n            let code = numericEntity.charAt(1).toLowerCase() === 'x' ? parseInt(numericEntity.substr(2), 16) : parseInt(numericEntity.substr(1), 10);\n            // 1114111 is the largest valid unicode codepoint.\n            if (isNaN(code) || code > 1114111) {\n                return s;\n            }\n            return String.fromCodePoint(code) || s;\n        }\n        // Named entity. Only HTML reserved entities are currently supported.\n        if (namedEntity) {\n            return RESERVED_CHARACTERS[namedEntity.toLowerCase()] || s;\n        }\n        return s;\n    });\n}\n//# sourceMappingURL=html-parser.js.map","import { ParentNode } from './ParentNode';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { toString as attrsToString, matchPredicate as matchAttrPredicate } from './Attr';\nimport { mutate } from '../MutationObserver';\nimport { toLower, toUpper } from '../../utils';\nimport { CSSStyleDeclaration } from '../css/CSSStyleDeclaration';\nimport { matchChildrenElements } from './matchElements';\nimport { reflectProperties } from './enhanceElement';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { parse } from '../../third_party/html-parser/html-parser';\nimport { propagate } from './Node';\nimport { Event } from '../Event';\nexport const NS_NAME_TO_CLASS = {};\nexport const registerSubclass = (localName, subclass, namespace = HTML_NAMESPACE) => (NS_NAME_TO_CLASS[`${namespace}:${localName}`] = subclass);\nexport function definePropertyBackedAttributes(defineOn, attributes) {\n    const sub = Object.create(defineOn[46 /* propertyBackedAttributes */]);\n    defineOn[46 /* propertyBackedAttributes */] = Object.assign(sub, attributes);\n}\n/**\n * There are six kinds of elements, each having different start/close tag semantics.\n * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n */\nvar ElementKind;\n(function (ElementKind) {\n    ElementKind[ElementKind[\"NORMAL\"] = 0] = \"NORMAL\";\n    ElementKind[ElementKind[\"VOID\"] = 1] = \"VOID\";\n    // The following element kinds have no special handling in worker-dom yet\n    // and are lumped into the NORMAL kind.\n    /*\n    FOREIGN,\n    TEMPLATE,\n    RAW_TEXT,\n    ESCAPABLE_RAW,\n    */\n})(ElementKind || (ElementKind = {}));\n/**\n * @see https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n */\nconst VOID_ELEMENTS = ['AREA', 'BASE', 'BR', 'COL', 'EMBED', 'HR', 'IMG', 'INPUT', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'];\nexport class Element extends ParentNode {\n    _classList;\n    static [46 /* propertyBackedAttributes */] = {\n        class: [(el) => el.classList.value, (el, value) => (el.classList.value = value)],\n        style: [(el) => el.cssText, (el, value) => (el.cssText = value)],\n    };\n    localName;\n    attributes = [];\n    namespaceURI;\n    style_;\n    /**\n     * Element \"kind\" dictates certain behaviors e.g. start/end tag semantics.\n     * @see https://html.spec.whatwg.org/multipage/syntax.html#elements-2\n     */\n    kind;\n    constructor(nodeType, localName, namespaceURI, ownerDocument, overrideIndex) {\n        super(nodeType, toUpper(localName), ownerDocument, overrideIndex);\n        this.namespaceURI = namespaceURI || HTML_NAMESPACE;\n        this.localName = localName;\n        this.kind = VOID_ELEMENTS.includes(this.tagName) ? ElementKind.VOID : ElementKind.NORMAL;\n        this[8 /* creationFormat */] = [\n            this[7 /* index */],\n            this.nodeType,\n            storeString(this.localName),\n            0,\n            this.namespaceURI === null ? 0 : storeString(this.namespaceURI),\n        ];\n    }\n    // We lazily instantiate the CSSStyleDeclaration to keep element creation cheap\n    // See https://github.com/ampproject/worker-dom/pull/1096 for context.\n    get style() {\n        if (!this.style_) {\n            this.style_ = new CSSStyleDeclaration(this);\n        }\n        return this.style_;\n    }\n    // Unimplemented properties\n    // Element.clientHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    // Element.clientLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft\n    // Element.clientTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop\n    // Element.clientWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n    // set Element.innerHTML – https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // Element.prefix – https://developer.mozilla.org/en-US/docs/Web/API/Element/prefix\n    // NonDocummentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // Element.scrollHeight – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n    // Element.scrollLeft – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n    // Element.scrollLeftMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeftMax\n    // Element.scrollTop – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n    // Element.scrollTopMax – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTopMax\n    // Element.scrollWidth – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n    // Element.shadowRoot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/shadowRoot\n    // Element.slot – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/slot\n    // Element.tabStop – https://developer.mozilla.org/en-US/docs/Web/API/Element/tabStop\n    // Element.undoManager – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoManager\n    // Element.undoScope – https://developer.mozilla.org/en-US/docs/Web/API/Element/undoScope\n    // Unimplemented Methods\n    // Element.attachShadow() – !! CustomElements – https://developer.mozilla.org/en-US/docs/Web/API/Element/attachShadow\n    // Element.animate() – https://developer.mozilla.org/en-US/docs/Web/API/Element/animate\n    // Element.closest() – https://developer.mozilla.org/en-US/docs/Web/API/Element/closest\n    // Element.getAttributeNames() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNames\n    // Element.getBoundingClientRect() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n    // Element.getClientRects() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects\n    // Element.getElementsByTagNameNS() – https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagNameNS\n    // Element.insertAdjacentElement() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement\n    // Element.insertAdjacentHTML() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentHTML\n    // Element.insertAdjacentText() – https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentText\n    // Element.matches() – https://developer.mozilla.org/en-US/docs/Web/API/Element/matches\n    // Element.releasePointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/releasePointerCapture\n    // Element.requestFullscreen() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullscreen\n    // Element.requestPointerLock() – https://developer.mozilla.org/en-US/docs/Web/API/Element/requestPointerLock\n    // Element.scrollIntoView() – https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    // Element.setCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setCapture\n    // Element.setPointerCapture() – https://developer.mozilla.org/en-US/docs/Web/API/Element/setPointerCapture\n    // Partially implemented Mixin Methods\n    // Both Element.querySelector() and Element.querySelector() are only implemented for the following simple selectors:\n    // - Element selectors\n    // - ID selectors\n    // - Class selectors\n    // - Attribute selectors\n    // Element.querySelector() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelector\n    // Element.querySelectorAll() – https://developer.mozilla.org/en-US/docs/Web/API/Element/querySelectorAll\n    // Mixins not implemented\n    // Slotable.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Slotable/assignedSlot\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/outerHTML\n     * @return string representation of serialized HTML describing the Element and its descendants.\n     */\n    get outerHTML() {\n        const tag = this.localName || this.tagName;\n        const start = `<${[tag, attrsToString(this.attributes)].join(' ').trim()}>`;\n        const contents = this.innerHTML;\n        if (!contents) {\n            if (this.kind === ElementKind.VOID) {\n                // Void elements e.g. <input> only have a start tag (unless children are added programmatically).\n                // https://html.spec.whatwg.org/multipage/syntax.html#void-elements\n                return start;\n            }\n        }\n        return start + contents + `</${tag}>`;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @return string representation of serialized HTML describing the Element's descendants.\n     */\n    get innerHTML() {\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            return childNodes\n                .map((child) => {\n                switch (child.nodeType) {\n                    case 3 /* TEXT_NODE */:\n                        return child.textContent;\n                    case 8 /* COMMENT_NODE */:\n                        return `<!--${child.textContent}-->`;\n                    default:\n                        return child.outerHTML;\n                }\n            })\n                .join('');\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML\n     * @param html The raw html string to parse.\n     */\n    set innerHTML(html) {\n        const root = parse(html, this);\n        // remove previous children\n        this.childNodes.forEach((n) => {\n            propagate(n, 'isConnected', false);\n            propagate(n, 45 /* scopingRoot */, n);\n        });\n        mutate(this.ownerDocument, {\n            removedNodes: this.childNodes,\n            type: 2 /* CHILD_LIST */,\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            0,\n            0,\n            0,\n            this.childNodes.length,\n            ...this.childNodes.map((node) => node[7 /* index */]),\n        ]);\n        this.childNodes = [];\n        // add new children\n        root.childNodes.forEach((child) => this.appendChild(child));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @param text new text replacing all childNodes content.\n     */\n    set textContent(text) {\n        // TODO(KB): Investigate removing all children in a single .splice to childNodes.\n        this.childNodes.slice().forEach((child) => child.remove());\n        this.appendChild(this.ownerDocument.createTextNode(text));\n    }\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/tagName\n     * @return string tag name (i.e 'div')\n     */\n    get tagName() {\n        return this.nodeName;\n    }\n    /**\n     * Sets the value of an attribute on this element using a null namespace.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttribute(name, value) {\n        this.setAttributeNS(HTML_NAMESPACE, name, value);\n    }\n    /**\n     * Get the value of an attribute on this Element with the null namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttribute(name) {\n        return this.getAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * Remove an attribute from this element in the null namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param name attribute name\n     */\n    removeAttribute(name) {\n        this.removeAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttribute\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttribute(name) {\n        return this.hasAttributeNS(HTML_NAMESPACE, name);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributes\n     * @return Boolean indicating if the element has any attributes.\n     */\n    hasAttributes() {\n        return this.attributes.length > 0;\n    }\n    /**\n     * Sets the value of an attribute on this Element with the provided namespace.\n     *\n     * If the attribute already exists, the value is updated; otherwise a new attribute is added with the specified name and value.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttributeNS\n     * @param namespaceURI\n     * @param name attribute name\n     * @param value attribute value\n     */\n    setAttributeNS(namespaceURI, name, value) {\n        const valueAsString = String(value);\n        const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n        if (propertyBacked !== undefined) {\n            if (!this.attributes.find(matchAttrPredicate(namespaceURI, name))) {\n                this.attributes.push({\n                    namespaceURI,\n                    name,\n                    value: valueAsString,\n                });\n            }\n            propertyBacked[1](this, valueAsString);\n            return;\n        }\n        const oldValue = this[44 /* storeAttribute */](namespaceURI, name, valueAsString);\n        mutate(this.ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this,\n            attributeName: name,\n            attributeNamespace: namespaceURI,\n            value: valueAsString,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[7 /* index */],\n            storeString(name),\n            storeString(namespaceURI),\n            value !== null ? storeString(valueAsString) + 1 : 0,\n        ]);\n    }\n    [44 /* storeAttribute */](namespaceURI, name, value) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        const oldValue = (attr && attr.value) || '';\n        if (attr) {\n            attr.value = value;\n        }\n        else {\n            this.attributes.push({\n                namespaceURI,\n                name,\n                value,\n            });\n        }\n        return oldValue;\n    }\n    /**\n     * Get the value of an attribute on this Element with the specified namespace.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return value of a specified attribute on the element, or null if the attribute doesn't exist.\n     */\n    getAttributeNS(namespaceURI, name) {\n        const attr = this.attributes.find(matchAttrPredicate(namespaceURI, name));\n        if (attr) {\n            const propertyBacked = this.constructor[46 /* propertyBackedAttributes */][name];\n            return propertyBacked !== undefined ? propertyBacked[0](this) : attr.value;\n        }\n        return null;\n    }\n    /**\n     * Remove an attribute from this element in the specified namespace.\n     *\n     * Method returns void, so it is not chainable.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     */\n    removeAttributeNS(namespaceURI, name) {\n        const index = this.attributes.findIndex(matchAttrPredicate(namespaceURI, name));\n        if (index >= 0) {\n            const oldValue = this.attributes[index].value;\n            this.attributes.splice(index, 1);\n            mutate(this.ownerDocument, {\n                type: 0 /* ATTRIBUTES */,\n                target: this,\n                attributeName: name,\n                attributeNamespace: namespaceURI,\n                oldValue,\n            }, [\n                0 /* ATTRIBUTES */,\n                this[7 /* index */],\n                storeString(name),\n                storeString(namespaceURI),\n                0, // 0 means no value\n            ]);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/hasAttributeNS\n     * @param namespaceURI attribute namespace\n     * @param name attribute name\n     * @return Boolean indicating if the element has the specified attribute.\n     */\n    hasAttributeNS(namespaceURI, name) {\n        return this.attributes.some(matchAttrPredicate(namespaceURI, name));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByClassName\n     * @param names contains one more more classnames to match on. Multiples are space seperated, indicating an AND operation.\n     * @return Element array with matching classnames\n     */\n    getElementsByClassName(names) {\n        const inputClassList = names.split(' ');\n        // TODO(KB) – Compare performance of [].some(value => DOMTokenList.contains(value)) and regex.\n        // const classRegex = new RegExp(classNames.split(' ').map(name => `(?=.*${name})`).join(''));\n        return matchChildrenElements(this, (element) => inputClassList.some((inputClassName) => element.classList.contains(inputClassName)));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName\n     * @param tagName the qualified name to look for. The special string \"*\" represents all elements.\n     * @return Element array with matching tagnames\n     */\n    getElementsByTagName(tagName) {\n        const lowerTagName = toLower(tagName);\n        return matchChildrenElements(this, tagName === '*'\n            ? (_) => true\n            : (element) => (element.namespaceURI === HTML_NAMESPACE ? element.localName === lowerTagName : element.tagName === tagName));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByName\n     * @param name value of name attribute elements must have to be returned\n     * @return Element array with matching name attributes\n     */\n    getElementsByName(name) {\n        const stringName = '' + name;\n        return matchChildrenElements(this, (element) => element.getAttribute('name') === stringName);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return Element containing all current attributes and potentially childNode clones of the Element requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createElementNS(this.namespaceURI, this.namespaceURI === HTML_NAMESPACE ? toLower(this.tagName) : this.tagName);\n        this.attributes.forEach((attr) => clone.setAttribute(attr.name, attr.value));\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n    /**\n     * Return the ClientRect for an Element once determined by the main thread.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n     * @return Promise<ClientRect>\n     *\n     * Note: Edge and IE11 do not return the x/y value, but top/left are equivalent. Normalize the values here.\n     */\n    getBoundingClientRectAsync() {\n        const defaultValue = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0,\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        return new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 6 /* GET_BOUNDING_CLIENT_RECT */ &&\n                    data[13 /* target */][0] === this[7 /* index */]) {\n                    this.ownerDocument.removeGlobalEventListener('message', messageHandler);\n                    const transferredBoundingClientRect = data[38 /* data */];\n                    resolve({\n                        top: transferredBoundingClientRect[0],\n                        right: transferredBoundingClientRect[1],\n                        bottom: transferredBoundingClientRect[2],\n                        left: transferredBoundingClientRect[3],\n                        width: transferredBoundingClientRect[4],\n                        height: transferredBoundingClientRect[5],\n                        x: transferredBoundingClientRect[0],\n                        y: transferredBoundingClientRect[3],\n                    });\n                }\n            };\n            if (!this.ownerDocument.addGlobalEventListener || !this.isConnected) {\n                // Elements run within Node runtimes are missing addEventListener as a global.\n                // In this case, treat the return value the same as a disconnected node.\n                resolve(defaultValue);\n            }\n            else {\n                this.ownerDocument.addGlobalEventListener('message', messageHandler);\n                transfer(this.ownerDocument, [5 /* GET_BOUNDING_CLIENT_RECT */, this[7 /* index */]]);\n                setTimeout(resolve, 500, defaultValue); // TODO: Why a magical constant, define and explain.\n            }\n        });\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click\n    click() {\n        const event = new Event('click', {});\n        event.target = this;\n        this.dispatchEvent(event);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\n    scrollIntoView() {\n        if (this.isConnected) {\n            transfer(this.ownerDocument, [14 /* SCROLL_INTO_VIEW */, this[7 /* index */]]);\n        }\n    }\n    get classList() {\n        return this._classList || (this._classList = new DOMTokenList(this, 'class'));\n    }\n}\nsynchronizedAccessor(Element, 'classList', 'className');\nreflectProperties([{ id: [''] }], Element);\n//# sourceMappingURL=Element.js.map","import { store } from './strings';\nconst f32 = new Float32Array(1);\nconst u16 = new Uint16Array(f32.buffer);\nfunction isSmallInt(num) {\n    u16[0] = num;\n    // If the Uint16Array doesn't coerce it to another value, that means it fits\n    // into a Uint16Array.\n    return u16[0] === num;\n}\n/**\n * Serializes arguments into a Uint16 compatible format.\n *\n * The serialization format uses a variable length tuple, with the first item\n * being the encoded representation's type and any number of values afterwards.\n *\n * @param args The arguments to serialize\n */\nexport function serializeTransferrableObject(args) {\n    const serialized = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (typeof arg === 'number') {\n            if (isSmallInt(arg)) {\n                serialized.push(1 /* SmallInt */, arg);\n            }\n            else {\n                f32[0] = arg;\n                serialized.push(2 /* Float */, u16[0], u16[1]);\n            }\n            continue;\n        }\n        if (typeof arg === 'string') {\n            serialized.push(3 /* String */, store(arg));\n            continue;\n        }\n        if (Array.isArray(arg)) {\n            serialized.push(4 /* Array */, arg.length);\n            const serializedArray = serializeTransferrableObject(arg);\n            for (let i = 0; i < serializedArray.length; i++) {\n                serialized.push(serializedArray[i]);\n            }\n            continue;\n        }\n        if (typeof arg === 'object') {\n            const serializedObject = arg[68 /* serializeAsTransferrableObject */]();\n            for (let i = 0; i < serializedObject.length; i++) {\n                serialized.push(serializedObject[i]);\n            }\n            continue;\n        }\n        throw new Error('Cannot serialize argument.');\n    }\n    return serialized;\n}\n//# sourceMappingURL=serializeTransferrableObject.js.map","import { transfer } from '../MutationTransfer';\nlet indexTracker = 0;\nexport function retrieveImageBitmap(image, canvas) {\n    const callIndex = indexTracker++;\n    const document = canvas.ownerDocument;\n    return new Promise((resolve) => {\n        const messageHandler = ({ data }) => {\n            if (data[12 /* type */] === 10 /* IMAGE_BITMAP_INSTANCE */ && data[73 /* callIndex */] === callIndex) {\n                document.removeGlobalEventListener('message', messageHandler);\n                const transferredImageBitmap = data[38 /* data */];\n                resolve(transferredImageBitmap);\n            }\n        };\n        if (!document.addGlobalEventListener) {\n            throw new Error('addGlobalEventListener is not defined.');\n        }\n        else {\n            document.addGlobalEventListener('message', messageHandler);\n            transfer(canvas.ownerDocument, [11 /* IMAGE_BITMAP_INSTANCE */, image[7 /* index */], callIndex]);\n        }\n    });\n}\n//# sourceMappingURL=canvas-utils.js.map","import { store } from './strings';\nimport { transfer } from './MutationTransfer';\n/**\n * @param document\n * @param location\n * @param data\n */\nexport function createStorage(document, location, data) {\n    const storage = Object.assign(Object.create(null), data);\n    // Define properties on a prototype-less object instead of a class so that\n    // it behaves more like normal objects, e.g. bracket notation and JSON.stringify.\n    const define = Object.defineProperty;\n    define(storage, 'length', {\n        get() {\n            return Object.keys(this).length;\n        },\n    });\n    define(storage, 'key', {\n        value(n) {\n            const keys = Object.keys(this);\n            return n >= 0 && n < keys.length ? keys[n] : null;\n        },\n    });\n    define(storage, 'getItem', {\n        value(key) {\n            const value = this[key];\n            return value ? value : null;\n        },\n    });\n    define(storage, 'setItem', {\n        value(key, value) {\n            const stringValue = String(value);\n            this[key] = stringValue;\n            transfer(document, [12 /* STORAGE */, 2 /* SET */, location, store(key), store(stringValue)]);\n        },\n    });\n    define(storage, 'removeItem', {\n        value(key) {\n            delete this[key];\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                store(key),\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    define(storage, 'clear', {\n        value() {\n            Object.keys(this).forEach((key) => {\n                delete this[key];\n            });\n            transfer(document, [\n                12 /* STORAGE */,\n                2 /* SET */,\n                location,\n                0,\n                0, // value == 0 represents deletion.\n            ]);\n        },\n    });\n    return storage;\n}\n//# sourceMappingURL=Storage.js.map","import { transfer } from './MutationTransfer';\nexport function wrap(target, func) {\n    return function () {\n        return execute(target, Promise.resolve(func.apply(null, arguments)));\n    };\n}\nfunction execute(target, promise) {\n    // Start the task.\n    transfer(target.ownerDocument, [6 /* LONG_TASK_START */, target[7 /* index */]]);\n    return promise.then((result) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* LONG_TASK_END */, target[7 /* index */]]);\n        return result;\n    }, (reason) => {\n        // Complete the task.\n        transfer(target.ownerDocument, [7 /* LONG_TASK_END */, target[7 /* index */]]);\n        throw reason;\n    });\n}\n//# sourceMappingURL=long-task.js.map","export let phase = 0 /* Initializing */;\nexport const set = (newPhase) => (phase = newPhase);\n//# sourceMappingURL=phase.js.map","import { store } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class AMP {\n    document;\n    constructor(document) {\n        this.document = document;\n    }\n    /**\n     * Returns a promise that resolves with the value of `key`.\n     * @param key\n     */\n    getState(key = '') {\n        return new Promise((resolve) => {\n            const messageHandler = (event) => {\n                const message = event.data;\n                if (message[12 /* type */] !== 11 /* GET_STORAGE */) {\n                    return;\n                }\n                // TODO: There is a race condition here if there are multiple concurrent\n                // getState(k) messages in flight, where k is the same value.\n                const storageMessage = message;\n                if (storageMessage[74 /* storageKey */] !== key) {\n                    return;\n                }\n                this.document.removeGlobalEventListener('message', messageHandler);\n                const value = storageMessage[21 /* value */];\n                resolve(value);\n            };\n            this.document.addGlobalEventListener('message', messageHandler);\n            transfer(this.document, [12 /* STORAGE */, 1 /* GET */, 2 /* AmpState */, /* key */ store(key), /* value */ 0]);\n            setTimeout(resolve, 500, null); // TODO: Why a magical constant, define and explain.\n        });\n    }\n    /**\n     * Deep-merges `state` into the existing state.\n     * @param state\n     */\n    setState(state) {\n        // Stringify `state` so it can be post-messaged as a transferrable.\n        let stringified;\n        try {\n            stringified = JSON.stringify(state);\n        }\n        catch (e) {\n            throw new Error(`AMP.setState only accepts valid JSON as input.`);\n        }\n        transfer(this.document, [12 /* STORAGE */, 2 /* SET */, 2 /* AmpState */, /* key */ 0, /* value */ store(stringified)]);\n    }\n}\n//# sourceMappingURL=amp.js.map","import { transfer } from './MutationTransfer';\nimport { store } from './strings';\nconst exportedFunctions = {};\nexport function callFunctionMessageHandler(event, document) {\n    const msg = event.data;\n    if (msg[12 /* type */] !== 12 /* FUNCTION */) {\n        return;\n    }\n    const functionMessage = msg;\n    const fnIdentifier = functionMessage[77 /* functionIdentifier */];\n    const fnArguments = JSON.parse(functionMessage[78 /* functionArguments */]);\n    const index = functionMessage[7 /* index */];\n    const fn = exportedFunctions[fnIdentifier];\n    if (!fn) {\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Exported function \"${fnIdentifier}\" could not be found.`)),\n        ]);\n        return;\n    }\n    Promise.resolve(fn) // Forcing promise flows allows us to skip a try/catch block.\n        .then((f) => f.apply(null, fnArguments))\n        .then((value) => {\n        transfer(document, [13 /* FUNCTION_CALL */, 1 /* RESOLVE */, index, store(JSON.stringify(value))]);\n    }, (err) => {\n        const errorMessage = JSON.stringify(err.message || err);\n        transfer(document, [\n            13 /* FUNCTION_CALL */,\n            2 /* REJECT */,\n            index,\n            store(JSON.stringify(`[worker-dom]: Function \"${fnIdentifier}\" threw: \"${errorMessage}\"`)),\n        ]);\n    });\n}\nexport function exportFunction(name, fn) {\n    if (!name || name === '') {\n        throw new Error(`[worker-dom]: Attempt to export function was missing an identifier.`);\n    }\n    if (typeof fn !== 'function') {\n        throw new Error(`[worker-dom]: Attempt to export non-function failed: (\"${name}\", ${typeof fn}).`);\n    }\n    if (name in exportedFunctions) {\n        throw new Error(`[worker-dom]: Attempt to re-export function failed: \"${name}\".`);\n    }\n    exportedFunctions[name] = fn;\n}\nexport function resetForTesting() {\n    for (const key of Object.keys(exportedFunctions)) {\n        delete exportedFunctions[key];\n    }\n}\n//# sourceMappingURL=function.js.map","import { store as storeNodeMapping, storeOverride as storeOverrideNodeMapping } from '../nodes';\nimport { toLower } from '../../utils';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\n/**\n * Propagates a property change for a Node to itself and all childNodes.\n * @param node Node to start applying change to\n * @param property Property to modify\n * @param value New value to apply\n */\nexport const propagate = (node, property, value) => {\n    node[property] = value;\n    node.childNodes.forEach((child) => propagate(child, property, value));\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/Node\n// https://developer.mozilla.org/en-US/docs/Web/API/EventTarget\n//\n// Please note, in this implmentation Node doesn't extend EventTarget.\n// This is intentional to reduce the number of classes.\nexport class Node {\n    ownerDocument; // TODO(choumx): Should be a Document.\n    // https://drafts.csswg.org/selectors-4/#scoping-root\n    [45 /* scopingRoot */];\n    nodeType;\n    nodeName;\n    childNodes = [];\n    parentNode = null;\n    isConnected = false;\n    [7 /* index */];\n    [9 /* transferredFormat */];\n    [8 /* creationFormat */];\n    [10 /* handlers */] = {};\n    constructor(nodeType, nodeName, ownerDocument, overrideIndex) {\n        this.nodeType = nodeType;\n        this.nodeName = nodeName;\n        this.ownerDocument = ownerDocument || this;\n        this[45 /* scopingRoot */] = this;\n        if (process.env.SERVER) {\n            return;\n        }\n        this[7 /* index */] = overrideIndex ? storeOverrideNodeMapping(this, overrideIndex) : storeNodeMapping(this);\n        this[9 /* transferredFormat */] = [this[7 /* index */]];\n    }\n    // Unimplemented Properties\n    // Node.baseURI – https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI\n    // Unimplemented Methods\n    // Node.compareDocumentPosition() – https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n    // Node.getRootNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/getRootNode\n    // Node.isDefaultNamespace() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isDefaultNamespace\n    // Node.isEqualNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isEqualNode\n    // Node.isSameNode() – https://developer.mozilla.org/en-US/docs/Web/API/Node/isSameNode\n    // Node.lookupPrefix() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupPrefix\n    // Node.lookupNamespaceURI() – https://developer.mozilla.org/en-US/docs/Web/API/Node/lookupNamespaceURI\n    // Node.normalize() – https://developer.mozilla.org/en-US/docs/Web/API/Node/normalize\n    // Implemented at Element/Text layer\n    // Node.nodeValue – https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeValue\n    // Node.cloneNode – https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n    /**\n     * Getter returning the text representation of Element.childNodes.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent\n     * @return text from all childNodes.\n     */\n    get textContent() {\n        return this.getTextContent();\n    }\n    /**\n     * Use `this.getTextContent()` instead of `super.textContent` to avoid incorrect or expensive ES5 transpilation.\n     */\n    getTextContent() {\n        let textContent = '';\n        const childNodes = this.childNodes;\n        if (childNodes.length) {\n            childNodes.forEach((childNode) => (textContent += childNode.textContent));\n            return textContent;\n        }\n        return '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/firstChild\n     * @return Node's first child in the tree, or null if the node has no children.\n     */\n    get firstChild() {\n        return this.childNodes[0] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/lastChild\n     * @return The last child of a node, or null if there are no child elements.\n     */\n    get lastChild() {\n        return this.childNodes[this.childNodes.length - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/nextSibling\n     * @return node immediately following the specified one in it's parent's childNodes, or null if one doesn't exist.\n     */\n    get nextSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) + 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/previousSibling\n     * @return node immediately preceding the specified one in its parent's childNodes, or null if the specified node is the first in that list.\n     */\n    get previousSibling() {\n        if (this.parentNode === null) {\n            return null;\n        }\n        const parentChildNodes = this.parentNode.childNodes;\n        return parentChildNodes[parentChildNodes.indexOf(this) - 1] || null;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/hasChildNodes\n     * @return boolean if the Node has childNodes.\n     */\n    hasChildNodes() {\n        return this.childNodes.length > 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/contains\n     * @param otherNode\n     * @return whether a Node is a descendant of a given Node\n     */\n    contains(otherNode) {\n        if (otherNode === this) {\n            return true;\n        }\n        if (this.childNodes.length > 0) {\n            if (this.childNodes.includes(this)) {\n                return true;\n            }\n            return this.childNodes.some((child) => child.contains(otherNode));\n        }\n        return false;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/insertBefore\n     * @param child\n     * @param referenceNode\n     * @return child after it has been inserted.\n     */\n    insertBefore(child, referenceNode) {\n        if (child === null || child === this) {\n            // The new child cannot contain the parent.\n            return child;\n        }\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach((node) => this.insertBefore(node, referenceNode));\n        }\n        else if (referenceNode == null) {\n            // When a referenceNode is not valid, appendChild(child).\n            return this.appendChild(child);\n        }\n        else if (this.childNodes.indexOf(referenceNode) >= 0) {\n            // Should only insertBefore direct children of this Node.\n            child.remove();\n            // Removing a child can cause this.childNodes to change, meaning we need to splice from its updated location.\n            this.childNodes.splice(this.childNodes.indexOf(referenceNode), 0, child);\n            this[56 /* insertedNode */](child);\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                nextSibling: referenceNode,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                referenceNode[7 /* index */],\n                0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * When a Node is inserted, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        child.parentNode = this;\n        propagate(child, 'isConnected', this.isConnected);\n        propagate(child, 45 /* scopingRoot */, this[45 /* scopingRoot */]);\n    }\n    /**\n     * When a node is removed, this method is called (and can be extended by other classes)\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        child.parentNode = null;\n        propagate(child, 'isConnected', false);\n        propagate(child, 45 /* scopingRoot */, child);\n    }\n    /**\n     * Adds the specified childNode argument as the last child to the current node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/appendChild\n     * @param child Child Node to append to this Node.\n     * @return Node the appended node.\n     */\n    appendChild(child) {\n        if (child.nodeType === 11 /* DOCUMENT_FRAGMENT_NODE */) {\n            child.childNodes.slice().forEach(this.appendChild, this);\n        }\n        else {\n            child.remove();\n            this.childNodes.push(child);\n            this[56 /* insertedNode */](child);\n            const previousSibling = this.childNodes[this.childNodes.length - 2];\n            mutate(this.ownerDocument, {\n                addedNodes: [child],\n                previousSibling,\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [\n                2 /* CHILD_LIST */,\n                this[7 /* index */],\n                0,\n                previousSibling ? previousSibling[7 /* index */] : 0,\n                1,\n                0,\n                child[7 /* index */],\n            ]);\n        }\n        return child;\n    }\n    /**\n     * Removes a child node from the current element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/removeChild\n     * @param child Child Node to remove from this Node.\n     * @return Node removed from the tree or null if the node wasn't attached to this tree.\n     */\n    removeChild(child) {\n        const index = this.childNodes.indexOf(child);\n        const exists = index >= 0;\n        if (exists) {\n            this.childNodes.splice(index, 1);\n            this[57 /* removedNode */](child);\n            mutate(this.ownerDocument, {\n                removedNodes: [child],\n                type: 2 /* CHILD_LIST */,\n                target: this,\n            }, [2 /* CHILD_LIST */, this[7 /* index */], 0, 0, 0, 1, child[7 /* index */]]);\n            return child;\n        }\n        return null;\n    }\n    /**\n     * @param newChild\n     * @param oldChild\n     * @return child that was replaced.\n     * @note `HierarchyRequestError` not handled e.g. newChild is an ancestor of current node.\n     * @see https://dom.spec.whatwg.org/#concept-node-replace\n     */\n    replaceChild(newChild, oldChild) {\n        if (newChild === oldChild ||\n            // In DOM, this throws DOMException: \"The node to be replaced is not a child of this node.\"\n            oldChild.parentNode !== this ||\n            // In DOM, this throws DOMException: \"The new child element contains the parent.\"\n            newChild.contains(this)) {\n            return oldChild;\n        }\n        // If newChild already exists in the DOM, it is first removed.\n        // TODO: Consider using a mutation-free API here to avoid two mutations\n        // per replaceChild() call.\n        newChild.remove();\n        const index = this.childNodes.indexOf(oldChild);\n        this.childNodes.splice(index, 1, newChild);\n        this[57 /* removedNode */](oldChild);\n        this[56 /* insertedNode */](newChild);\n        mutate(this.ownerDocument, {\n            addedNodes: [newChild],\n            removedNodes: [oldChild],\n            type: 2 /* CHILD_LIST */,\n            nextSibling: this.childNodes[index + 1],\n            target: this,\n        }, [\n            2 /* CHILD_LIST */,\n            this[7 /* index */],\n            this.childNodes[index + 1] ? this.childNodes[index + 1][7 /* index */] : 0,\n            0,\n            1,\n            1,\n            newChild[7 /* index */],\n            oldChild[7 /* index */],\n        ]);\n        return oldChild;\n    }\n    /**\n     * Replaces the current node with the provided Array<node|string>.\n     * @param nodes\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/replaceWith\n     */\n    replaceWith(...nodes) {\n        const parent = this.parentNode;\n        let nodeIterator = nodes.length;\n        let currentNode;\n        if (!parent) {\n            return;\n        }\n        if (!nodeIterator) {\n            parent.removeChild(this);\n        }\n        while (nodeIterator--) {\n            currentNode = nodes[nodeIterator];\n            if (typeof currentNode !== 'object') {\n                currentNode = this.ownerDocument.createTextNode(currentNode);\n            }\n            // TODO: Investigate inserting all new nodes in a single operation.\n            if (!nodeIterator) {\n                // currentNode is the first argument (currentNode === arguments[0])\n                parent.replaceChild(currentNode, this);\n            }\n            else {\n                parent.insertBefore(currentNode, this.nextSibling);\n            }\n        }\n    }\n    /**\n     * Removes this Node from the tree it belogs too.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/ChildNode/remove\n     */\n    remove() {\n        if (this.parentNode) {\n            this.parentNode.removeChild(this);\n        }\n    }\n    /**\n     * Add an event listener to callback when a specific event type is dispatched.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function called when event is dispatched.\n     */\n    addEventListener(type, handler, options = {}) {\n        const lowerType = toLower(type);\n        const storedType = storeString(lowerType);\n        const handlers = this[10 /* handlers */][lowerType];\n        let index = 0;\n        if (handlers) {\n            index = handlers.push(handler);\n        }\n        else {\n            this[10 /* handlers */][lowerType] = [handler];\n        }\n        transfer(this.ownerDocument, [\n            4 /* EVENT_SUBSCRIPTION */,\n            this[7 /* index */],\n            0,\n            1,\n            storedType,\n            index,\n            Number(Boolean(options.capture)),\n            Number(Boolean(options.once)),\n            Number(Boolean(options.passive)),\n            Number(Boolean(options.workerDOMPreventDefault)),\n        ]);\n    }\n    /**\n     * Remove a registered event listener for a specific event type.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n     * @param type Event Type (i.e 'click')\n     * @param handler Function to stop calling when event is dispatched.\n     */\n    removeEventListener(type, handler) {\n        const lowerType = toLower(type);\n        const handlers = this[10 /* handlers */][lowerType];\n        const index = !!handlers ? handlers.indexOf(handler) : -1;\n        if (index >= 0) {\n            handlers.splice(index, 1);\n            transfer(this.ownerDocument, [\n                4 /* EVENT_SUBSCRIPTION */,\n                this[7 /* index */],\n                1,\n                0,\n                storeString(lowerType),\n                index,\n            ]);\n        }\n    }\n    /**\n     * Dispatch an event for this Node.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent\n     * @param event Event to dispatch to this node and potentially cascade to parents.\n     */\n    dispatchEvent(event) {\n        let target = (event.currentTarget = this);\n        let handlers;\n        let iterator;\n        do {\n            handlers = target && target[10 /* handlers */] && target[10 /* handlers */][toLower(event.type)];\n            if (handlers) {\n                for (iterator = handlers.length; iterator--;) {\n                    if ((handlers[iterator].call(target, event) === false || event[51 /* end */]) && event.cancelable) {\n                        break;\n                    }\n                }\n            }\n        } while (event.bubbles && !(event.cancelable && event[50 /* stop */]) && (target = target && target.parentNode));\n        return !event.defaultPrevented;\n    }\n}\n//# sourceMappingURL=Node.js.map","import { Node } from './Node';\nimport { mutate } from '../MutationObserver';\nimport { store as storeString } from '../strings';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/CharacterData\nexport class CharacterData extends Node {\n    [38 /* data */];\n    constructor(data, nodeType, nodeName, ownerDocument, overrideIndex) {\n        super(nodeType, nodeName, ownerDocument, overrideIndex);\n        this[38 /* data */] = data;\n        this[8 /* creationFormat */] = [this[7 /* index */], nodeType, storeString(nodeName), storeString(data), 0];\n    }\n    // Unimplemented Methods\n    // NonDocumentTypeChildNode.nextElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/nextElementSibling\n    // NonDocumentTypeChildNode.previousElementSibling – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/previousElementSibling\n    // CharacterData.appendData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/appendData\n    // CharacterData.deleteData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/deleteData\n    // CharacterData.insertData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/insertData\n    // CharacterData.replaceData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/replaceData\n    // CharacterData.substringData() – https://developer.mozilla.org/en-US/docs/Web/API/NonDocumentTypeChildNode/substringData\n    /**\n     * @return Returns the string contained in private CharacterData.data\n     */\n    get data() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set data(value) {\n        const oldValue = this.data;\n        this[38 /* data */] = value;\n        mutate(this.ownerDocument, {\n            target: this,\n            type: 1 /* CHARACTER_DATA */,\n            value,\n            oldValue,\n        }, [1 /* CHARACTER_DATA */, this[7 /* index */], storeString(value)]);\n    }\n    /**\n     * @return Returns the size of the string contained in CharacterData.data\n     */\n    get length() {\n        return this[38 /* data */].length;\n    }\n    /**\n     * @return Returns the string contained in CharacterData.data\n     */\n    get nodeValue() {\n        return this[38 /* data */];\n    }\n    /**\n     * @param value string value to store as CharacterData.data.\n     */\n    set nodeValue(value) {\n        this.data = value;\n    }\n}\n//# sourceMappingURL=CharacterData.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Comment\nexport class Comment extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 8 /* COMMENT_NODE */, '#comment', ownerDocument, overrideIndex);\n    }\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Comment Node with the same data as the Comment to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createComment(this.data);\n    }\n}\n//# sourceMappingURL=Comment.js.map","const ALLOWLISTED_GLOBALS = {\n    Array: true,\n    ArrayBuffer: true,\n    BigInt: true,\n    BigInt64Array: true,\n    BigUint64Array: true,\n    Boolean: true,\n    Cache: true,\n    CustomEvent: true,\n    DataView: true,\n    Date: true,\n    Error: true,\n    EvalError: true,\n    Event: true,\n    EventTarget: true,\n    Float32Array: true,\n    Float64Array: true,\n    Function: true,\n    Infinity: true,\n    Int16Array: true,\n    Int32Array: true,\n    Int8Array: true,\n    Intl: true,\n    JSON: true,\n    Map: true,\n    Math: true,\n    NaN: true,\n    Number: true,\n    Object: true,\n    Promise: true,\n    Proxy: true,\n    RangeError: true,\n    ReferenceError: true,\n    Reflect: true,\n    RegExp: true,\n    Set: true,\n    String: true,\n    Symbol: true,\n    SyntaxError: true,\n    TextDecoder: true,\n    TextEncoder: true,\n    TypeError: true,\n    URIError: true,\n    URL: true,\n    Uint16Array: true,\n    Uint32Array: true,\n    Uint8Array: true,\n    Uint8ClampedArray: true,\n    WeakMap: true,\n    WeakSet: true,\n    WebAssembly: true,\n    WebSocket: true,\n    XMLHttpRequest: true,\n    atob: true,\n    addEventListener: true,\n    removeEventListener: true,\n    btoa: true,\n    caches: true,\n    clearInterval: true,\n    clearTimeout: true,\n    console: true,\n    decodeURI: true,\n    decodeURIComponent: true,\n    document: true,\n    encodeURI: true,\n    encodeURIComponent: true,\n    escape: true,\n    fetch: true,\n    indexedDB: true,\n    isFinite: true,\n    isNaN: true,\n    location: true,\n    navigator: true,\n    onerror: true,\n    onrejectionhandled: true,\n    onunhandledrejection: true,\n    parseFloat: true,\n    parseInt: true,\n    performance: true,\n    requestAnimationFrame: true,\n    cancelAnimationFrame: true,\n    self: true,\n    setTimeout: true,\n    setInterval: true,\n    unescape: true,\n};\n// Modify global scope by removing disallowed properties.\nexport function deleteGlobals(global) {\n    /**\n     * @param object\n     * @param property\n     * @return True if property was deleted from object. Otherwise, false.\n     */\n    const deleteUnsafe = (object, property) => {\n        if (!ALLOWLISTED_GLOBALS.hasOwnProperty(property)) {\n            try {\n                delete object[property];\n                return true;\n            }\n            catch (e) { }\n        }\n        return false;\n    };\n    // Walk up global's prototype chain and dereference non-allowlisted properties\n    // until EventTarget is reached.\n    let current = global;\n    while (current && current.constructor !== EventTarget) {\n        const deleted = [];\n        const failedToDelete = [];\n        Object.getOwnPropertyNames(current).forEach((prop) => {\n            if (deleteUnsafe(current, prop)) {\n                deleted.push(prop);\n            }\n            else {\n                failedToDelete.push(prop);\n            }\n        });\n        console.info(`Removed ${deleted.length} references from`, current, ':', deleted);\n        if (failedToDelete.length) {\n            console.info(`Failed to remove ${failedToDelete.length} references from`, current, ':', failedToDelete);\n        }\n        current = Object.getPrototypeOf(current);\n    }\n}\n//# sourceMappingURL=delete-globals.js.map","import { toLower, toUpper } from '../../utils';\n// To future authors: It would be great if we could enforce that elements are not modified by a ConditionPredicate.\nexport const tagNameConditionPredicate = (tagNames) => (element) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    return tagNames.includes(element.tagName);\n};\nexport const elementPredicate = (node) => node.nodeType === 1 /* ELEMENT_NODE */;\nexport const matchChildrenElements = (node, conditionPredicate) => {\n    const matchingElements = [];\n    node.childNodes.forEach((child) => {\n        if (elementPredicate(child)) {\n            if (conditionPredicate(child)) {\n                matchingElements.push(child);\n            }\n            matchingElements.push(...matchChildrenElements(child, conditionPredicate));\n        }\n    });\n    return matchingElements;\n};\nexport const matchChildElement = (element, conditionPredicate) => {\n    let returnValue = null;\n    element.children.some((child) => {\n        if (conditionPredicate(child)) {\n            returnValue = child;\n            return true;\n        }\n        const grandChildMatch = matchChildElement(child, conditionPredicate);\n        if (grandChildMatch !== null) {\n            returnValue = grandChildMatch;\n            return true;\n        }\n        return false;\n    });\n    return returnValue;\n};\nexport const matchNearestParent = (element, conditionPredicate) => {\n    while ((element = element.parentNode)) {\n        if (conditionPredicate(element)) {\n            return element;\n        }\n    }\n    return null;\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors\n * @param attrSelector the selector we are trying to match for.\n * @param element the element being tested.\n * @return boolean for whether we match the condition\n */\nexport const matchAttrReference = (attrSelector, element) => {\n    if (!attrSelector) {\n        return false;\n    }\n    const equalPos = attrSelector.indexOf('=');\n    const selectorLength = attrSelector.length;\n    const caseInsensitive = attrSelector.charAt(selectorLength - 2) === 'i';\n    const endPos = caseInsensitive ? selectorLength - 3 : selectorLength - 1;\n    if (equalPos !== -1) {\n        const equalSuffix = attrSelector.charAt(equalPos - 1);\n        const possibleSuffixes = ['~', '|', '$', '^', '*'];\n        const attrString = possibleSuffixes.includes(equalSuffix) ? attrSelector.substring(1, equalPos - 1) : attrSelector.substring(1, equalPos);\n        const rawValue = attrSelector.substring(equalPos + 1, endPos);\n        const rawAttrValue = element.getAttribute(attrString);\n        if (rawAttrValue) {\n            const casedValue = caseInsensitive ? toLower(rawValue) : rawValue;\n            const casedAttrValue = caseInsensitive ? toLower(rawAttrValue) : rawAttrValue;\n            switch (equalSuffix) {\n                case '~':\n                    return casedAttrValue.split(' ').indexOf(casedValue) !== -1;\n                case '|':\n                    return casedAttrValue === casedValue || casedAttrValue === `${casedValue}-`;\n                case '^':\n                    return casedAttrValue.startsWith(casedValue);\n                case '$':\n                    return casedAttrValue.endsWith(casedValue);\n                case '*':\n                    return casedAttrValue.indexOf(casedValue) !== -1;\n                default:\n                    return casedAttrValue === casedValue;\n            }\n        }\n        return false;\n    }\n    else {\n        return element.hasAttribute(attrSelector.substring(1, endPos));\n    }\n};\n//# sourceMappingURL=matchElements.js.map","import { keyValueString } from '../../utils';\nexport const toString = (attributes) => attributes.map((attr) => keyValueString(attr.name, attr.value)).join(' ');\nexport const matchPredicate = (namespaceURI, name) => (attr) => attr.namespaceURI === namespaceURI && attr.name === name;\n//# sourceMappingURL=Attr.js.map","import { mutate } from '../MutationObserver';\nimport { toLower } from '../../utils';\nimport { store as storeString } from '../strings';\nconst hyphenateKey = (key) => toLower(key.replace(/(webkit|ms|moz|khtml)/g, '-$1').replace(/([a-zA-Z])(?=[A-Z])/g, '$1-'));\nexport const appendKeys = (keys) => {\n    const keysToAppend = keys.filter((key) => isNaN(key) && !CSSStyleDeclaration.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    const previousPrototypeLength = (CSSStyleDeclaration.prototype.length || 0);\n    if (previousPrototypeLength !== 0) {\n        CSSStyleDeclaration.prototype.length = previousPrototypeLength + keysToAppend.length;\n    }\n    else {\n        Object.defineProperty(CSSStyleDeclaration.prototype, 'length', {\n            configurable: true,\n            writable: true,\n            value: keysToAppend.length,\n        });\n    }\n    keysToAppend.forEach((key, index) => {\n        const hyphenatedKey = hyphenateKey(key);\n        CSSStyleDeclaration.prototype[index + previousPrototypeLength] = hyphenatedKey;\n        Object.defineProperties(CSSStyleDeclaration.prototype, {\n            [key]: {\n                get() {\n                    return this.getPropertyValue(hyphenatedKey);\n                },\n                set(value) {\n                    this.setProperty(hyphenatedKey, value);\n                },\n            },\n        });\n    });\n};\nexport class CSSStyleDeclaration {\n    [3 /* properties */] = {};\n    [44 /* storeAttribute */];\n    [13 /* target */];\n    constructor(target) {\n        this[44 /* storeAttribute */] = target[44 /* storeAttribute */].bind(target);\n        this[13 /* target */] = target;\n    }\n    /**\n     * Retrieve the value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/getPropertyValue\n     * @param key the name of the property to retrieve the value for.\n     * @return value stored for the provided key.\n     */\n    getPropertyValue(key) {\n        return this[3 /* properties */][key] || '';\n    }\n    /**\n     * Remove a value for a given property key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/removeProperty\n     * @param key the name of the property to retrieve the value for.\n     * @return previously stored value for the provided key.\n     */\n    removeProperty(key) {\n        const oldValue = this.getPropertyValue(key);\n        this[3 /* properties */][key] = null;\n        this.mutated(this.cssText);\n        return oldValue;\n    }\n    /**\n     * Stores a given value for the provided key.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/setProperty\n     * @param key modify this key\n     * @param value store this value\n     */\n    setProperty(key, value) {\n        this[3 /* properties */][key] = value;\n        this.mutated(this.cssText);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @return css text string representing known and valid style declarations.\n     */\n    get cssText() {\n        let value;\n        let returnValue = '';\n        for (const key in this[3 /* properties */]) {\n            if ((value = this.getPropertyValue(key)) !== '') {\n                returnValue += `${key}: ${value}; `;\n            }\n        }\n        return returnValue.trim();\n    }\n    /**\n     * Replace all style declarations with new values parsed from a cssText string.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration/cssText\n     * @param value css text string to parse and store\n     */\n    set cssText(value) {\n        // value should have an \"unknown\" type but get/set can't have different types.\n        // https://github.com/Microsoft/TypeScript/issues/2521\n        const stringValue = typeof value === 'string' ? value : '';\n        this[3 /* properties */] = {};\n        const values = stringValue.split(/[:;]/);\n        const length = values.length;\n        for (let index = 0; index + 1 < length; index += 2) {\n            this[3 /* properties */][toLower(values[index].trim())] = values[index + 1].trim();\n        }\n        this.mutated(this.cssText);\n    }\n    /**\n     * Report CSSStyleDeclaration mutations to MutationObserver.\n     * @param value value after mutation\n     * @private\n     * // TODO(KB): Write a test to ensure mutations are fired for CSSStyleDeclaration changes.\n     */\n    mutated(value) {\n        const oldValue = this[44 /* storeAttribute */](this[13 /* target */].namespaceURI, 'style', value);\n        mutate(this[13 /* target */].ownerDocument, {\n            type: 0 /* ATTRIBUTES */,\n            target: this[13 /* target */],\n            attributeName: 'style',\n            value,\n            oldValue,\n        }, [\n            0 /* ATTRIBUTES */,\n            this[13 /* target */][7 /* index */],\n            storeString('style'),\n            0,\n            value !== null ? storeString(value) + 1 : 0,\n        ]);\n    }\n}\n//# sourceMappingURL=CSSStyleDeclaration.js.map","import { toLower } from '../../utils';\n// TODO: Do all boolean attributes have boolean properties?\n// TODO: Do enumerated attributes with non-boolean properties exist?\nexport const reflectProperties = (properties, defineOn) => {\n    properties.forEach((pair) => {\n        for (const property in pair) {\n            const { 0: defaultValue, 1: attributeName = toLower(property), 2: keywords } = pair[property];\n            // Boolean attributes only care about presence, not attribute value.\n            // https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#boolean-attributes\n            const isBooleanAttribute = typeof defaultValue === 'boolean';\n            Object.defineProperty(defineOn.prototype, property, {\n                enumerable: true,\n                get() {\n                    const element = this;\n                    const attributeValue = element.getAttribute(attributeName);\n                    if (keywords) {\n                        return element.hasAttribute(attributeName) ? attributeValue === keywords[0] : defaultValue;\n                    }\n                    if (isBooleanAttribute) {\n                        return element.hasAttribute(attributeName);\n                    }\n                    const castableValue = attributeValue || defaultValue;\n                    return typeof defaultValue === 'number' ? Number(castableValue) : String(castableValue);\n                },\n                set(value) {\n                    const element = this;\n                    if (keywords) {\n                        element.setAttribute(attributeName, value ? keywords[0] : keywords[1]);\n                    }\n                    else if (isBooleanAttribute) {\n                        value ? element.setAttribute(attributeName, '') : element.removeAttribute(attributeName);\n                    }\n                    else {\n                        element.setAttribute(attributeName, String(value));\n                    }\n                },\n            });\n        }\n    });\n};\n//# sourceMappingURL=enhanceElement.js.map","/**\n * @fileoverview\n * WorkerDOM's `Event` class. `CustomEvent` is available natively in web worker.\n */\nimport { get } from './nodes';\nexport class Event {\n    bubbles;\n    cancelable;\n    cancelBubble;\n    currentTarget;\n    defaultPrevented;\n    eventPhase;\n    isTrusted;\n    returnValue;\n    // public srcElement: Element | null;\n    // TODO(KB): Restore srcElement.\n    target;\n    timeStamp;\n    type;\n    scoped;\n    [50 /* stop */] = false;\n    [51 /* end */] = false;\n    pageX;\n    pageY;\n    offsetX;\n    offsetY;\n    touches;\n    changedTouches;\n    constructor(type, opts) {\n        this.type = type;\n        this.bubbles = !!opts.bubbles;\n        this.cancelable = !!opts.cancelable;\n    }\n    stopPropagation() {\n        this[50 /* stop */] = true;\n    }\n    stopImmediatePropagation() {\n        this[51 /* end */] = this[50 /* stop */] = true;\n    }\n    preventDefault() {\n        this.defaultPrevented = true;\n    }\n    /** Event.initEvent() is deprecated but supported here for legacy usage.  */\n    initEvent(type, bubbles, cancelable) {\n        this.type = type;\n        this.bubbles = bubbles;\n        this.cancelable = cancelable;\n    }\n}\n/**\n * Determine the target for a TransferrableEvent.\n * @param document Event intended within the scope of this document.\n * @param event\n */\nconst targetFromTransfer = (document, event) => {\n    if (event[13 /* target */] !== null) {\n        const index = event[13 /* target */][0];\n        // If the target was sent as index 0, use the current document.\n        return get(index !== 0 ? index : document[7 /* index */]);\n    }\n    return null;\n};\n/**\n *\n * @param document\n * @param event\n */\nconst touchListFromTransfer = (document, event, key) => {\n    if (event[key] !== undefined) {\n        const touchListKeys = Object.keys(event[key]);\n        const list = {\n            length: touchListKeys.length,\n            item(index) {\n                return this[index] || null;\n            },\n        };\n        touchListKeys.forEach((touchListKey) => {\n            const numericKey = Number(touchListKey);\n            const transferredTouch = event[key][numericKey];\n            list[numericKey] = {\n                identifier: transferredTouch[0],\n                screenX: transferredTouch[1],\n                screenY: transferredTouch[2],\n                clientX: transferredTouch[3],\n                clientY: transferredTouch[4],\n                pageX: transferredTouch[5],\n                pageY: transferredTouch[6],\n                target: get(transferredTouch[7] !== 0 ? transferredTouch[7] : document[7 /* index */]),\n            };\n        });\n        return list;\n    }\n    return undefined;\n};\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 1 /* EVENT */) {\n            return;\n        }\n        const event = data[39 /* event */];\n        const node = get(event[7 /* index */]);\n        if (node !== null) {\n            node.dispatchEvent(Object.assign(new Event(event[12 /* type */], {\n                bubbles: event[25 /* bubbles */],\n                cancelable: event[26 /* cancelable */],\n            }), {\n                cancelBubble: event[27 /* cancelBubble */],\n                defaultPrevented: event[29 /* defaultPrevented */],\n                eventPhase: event[30 /* eventPhase */],\n                isTrusted: event[31 /* isTrusted */],\n                returnValue: event[32 /* returnValue */],\n                target: targetFromTransfer(global.document, event),\n                timeStamp: event[33 /* timeStamp */],\n                scoped: event[34 /* scoped */],\n                keyCode: event[35 /* keyCode */],\n                pageX: event[60 /* pageX */],\n                pageY: event[61 /* pageY */],\n                offsetX: event[65 /* offsetX */],\n                offsetY: event[66 /* offsetY */],\n                touches: touchListFromTransfer(global.document, event, 62 /* touches */),\n                changedTouches: touchListFromTransfer(global.document, event, 63 /* changedTouches */),\n            }));\n        }\n    });\n}\n//# sourceMappingURL=Event.js.map","export const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n//# sourceMappingURL=TransferrableNodes.js.map","import { Element } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { matchNearestParent, tagNameConditionPredicate } from './matchElements';\nexport const appendGlobalEventProperties = (keys) => {\n    const keysToAppend = keys.filter((key) => !HTMLElement.prototype.hasOwnProperty(key));\n    if (keysToAppend.length <= 0) {\n        return;\n    }\n    keysToAppend.forEach((key) => {\n        const normalizedKey = key.replace(/on/, '');\n        Object.defineProperty(HTMLElement.prototype, key, {\n            enumerable: true,\n            get() {\n                return this[76 /* propertyEventHandlers */][normalizedKey] || null;\n            },\n            set(value) {\n                const stored = this[76 /* propertyEventHandlers */][normalizedKey];\n                if (stored) {\n                    this.removeEventListener(normalizedKey, stored);\n                }\n                this.addEventListener(normalizedKey, value);\n                this[76 /* propertyEventHandlers */][normalizedKey] = value;\n            },\n        });\n    });\n};\nexport class HTMLElement extends Element {\n    [76 /* propertyEventHandlers */] = {};\n    /**\n     * Find the nearest parent form element.\n     * Implemented in HTMLElement since so many extensions of HTMLElement repeat this functionality. This is not to spec.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return nearest parent form element.\n     */\n    get form() {\n        return matchNearestParent(this, tagNameConditionPredicate(['FORM']));\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [7 /* HTMLElement */, this[7 /* index */]];\n    }\n}\n// Reflected properties\n// HTMLElement.accessKey => string, reflected attribute\n// HTMLElement.contentEditable => string, reflected attribute\n// HTMLElement.dir => string, reflected attribute\n// HTMLElement.lang => string, reflected attribute\n// HTMLElement.title => string, reflected attribute\n// HTMLElement.draggable => boolean, reflected attribute\n// HTMLElement.hidden => boolean, reflected attribute\n// HTMLElement.noModule => boolean, reflected attribute\n// HTMLElement.spellcheck => boolean, reflected attribute\n// HTMLElement.translate => boolean, reflected attribute\nreflectProperties([\n    { accessKey: [''] },\n    { contentEditable: ['inherit'] },\n    { dir: [''] },\n    { lang: [''] },\n    { title: [''] },\n    {\n        draggable: [false, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { hidden: [false, /* attr */ undefined] },\n    { noModule: [false] },\n    {\n        spellcheck: [true, /* attr */ undefined, /* keywords */ ['true', 'false']],\n    },\n    { translate: [true, /* attr */ undefined, /* keywords */ ['yes', 'no']] },\n], HTMLElement);\n// Properties\n// HTMLElement.accessKeyLabel => string, readonly value of \"accessKey\"\n// HTMLElement.isContentEditable => boolean, readonly value of contentEditable\n// HTMLElement.nonce => string, NOT REFLECTED\n// HTMLElement.tabIndex => number, reflected attribute\n// Layout Properties (TBD)\n// HTMLElement.offsetHeight => double, readonly\n// HTMLElement.offsetLeft => double, readonly\n// HTMLElement.offsetParent => Element\n// HTMLElement.offsetTop => double, readonly\n// HTMLElement.offsetWidth => double, readonly\n// Unimplemented Properties\n// HTMLElement.contextMenu => HTMLElement\n// HTMLElement.dataset => Map<string (get/set), string>\n// HTMLElement.dropzone => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.inert => boolean, reflected\n// HTMLElement.itemScope => boolean\n// HTMLElement.itemType => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemId => string\n// HTMLElement.itemRef => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemProp => DOMSettableTokenList (DOMTokenList)\n// HTMLElement.itemValue => object\n// HTMLElement.properties => HTMLPropertiesCollection, readonly\n//# sourceMappingURL=HTMLElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLAnchorElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n    /**\n     * Returns the href property/attribute value\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/toString\n     * @return string href attached to HTMLAnchorElement\n     */\n    toString() {\n        return this.href;\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * A Synonym for the Node.textContent property setter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLAnchorElement\n     * @param text replacement for all current childNodes.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('a', HTMLAnchorElement);\ndefinePropertyBackedAttributes(HTMLAnchorElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLAnchorElement, 'relList', 'rel');\n// Reflected properties, strings.\n// HTMLAnchorElement.href => string, reflected attribute\n// HTMLAnchorElement.hreflang => string, reflected attribute\n// HTMLAnchorElement.media => string, reflected attribute\n// HTMLAnchorElement.target => string, reflected attribute\n// HTMLAnchorElement.type => string, reflected attribute\nreflectProperties([{ href: [''] }, { hreflang: [''] }, { media: [''] }, { target: [''] }, { type: [''] }], HTMLAnchorElement);\n// Unimplemented\n// HTMLAnchorElement.download => string, reflected attribute\n// HTMLAnchorElement.type => Is a DOMString that reflects the type HTML attribute, indicating the MIME type of the linked resource.\n// Unimplemented URL parse of href attribute due to IE11 compatibility and low usage.\n// Note: Implementation doable using a private url property\n/*\n  class {\n    private url: URL | null = null;\n\n    constructor(...) {\n      // Element.getAttribute('href') => Element.href.\n      Object.assign(this[TransferrableKeys.propertyBackedAttributes], {\n        href: this.href,\n      });\n    }\n\n    get href(): string {\n      return this.url ? this.url.href : '';\n    }\n    set href(url: string) {\n      this.url = new URL(url);\n      this.setAttribute('href', this.url.href);\n    }\n  }\n*/\n// HTMLAnchorElement.host => string\n// HTMLAnchorElement.hostname => string\n// HTMLAnchorElement.protocol => string\n// HTMLAnchorElement.pathname => string\n// HTMLAnchorElement.search => string\n// HTMLAnchorElement.hash => string\n// HTMLAnchorElement.username => string\n// HTMLAnchorElement.password => string\n// HTMLAnchorElement.origin => string, readonly (getter no setter)\n//# sourceMappingURL=HTMLAnchorElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLButtonElement extends HTMLElement {\n}\nregisterSubclass('button', HTMLButtonElement);\n// Reflected properties, strings.\n// HTMLButtonElement.formAction => string, reflected attribute\n// HTMLButtonElement.formEnctype => string, reflected attribute\n// HTMLButtonElement.formMethod => string, reflected attribute\n// HTMLButtonElement.formTarget => string, reflected attribute\n// HTMLButtonElement.name => string, reflected attribute\n// HTMLButtonElement.type => string, reflected attribute (default submit)\n// HTMLButtonElement.value => string, reflected attribute\n// HTMLButtonElement.autofocus => boolean, reflected attribute\n// HTMLButtonElement.disabled => boolean, reflected attribute\nreflectProperties([\n    { formAction: [''] },\n    { formEnctype: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { name: [''] },\n    { type: ['submit'] },\n    { value: [''] },\n    { autofocus: [false] },\n    { disabled: [false] },\n], HTMLButtonElement);\n// Not reflected\n// HTMLButtonElement.formNoValidate => boolean\n// HTMLButtonElement.validity => ValidityState, readonly\n// Unimplemented\n// HTMLButtonElement.form => HTMLFormElement | null, readonly\n// HTMLButtonElement.labels => Array<HTMLLabelElement>, readonly\n// HTMLButtonElement.menu => HTMLMenuElement\n// HTMLButtonElement.willValidate => boolean, readonly\n// HTMLButtonElement.validationMessage => string, readonly\n//# sourceMappingURL=HTMLButtonElement.js.map","import { transfer } from '../MutationTransfer';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { store } from '../strings';\n/**\n * Wrapper class for CanvasGradient. The user will be able to manipulate as a regular CanvasGradient object.\n */\nexport class CanvasGradient {\n    id;\n    document;\n    constructor(id, document) {\n        this.document = document;\n        this.id = id;\n    }\n    addColorStop(offset, color) {\n        transfer(this.document, [\n            9 /* OBJECT_MUTATION */,\n            store('addColorStop'),\n            2,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject([...arguments]),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasGradient.js.map","/**\n * Wrapper class for CanvasPattern. The user will be able to manipulate as a regular CanvasPattern object.\n * This class will be used when the CanvasRenderingContext is using an OffscreenCanvas polyfill.\n */\nexport class CanvasPattern {\n    id;\n    constructor(id) {\n        this.id = id;\n    }\n    /**\n     * This is an experimental method.\n     */\n    setTransform() { }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [5 /* TransferObject */, this.id];\n    }\n}\n//# sourceMappingURL=CanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { toLower } from '../../utils';\nimport { store } from '../strings';\nimport { serializeTransferrableObject } from '../serializeTransferrableObject';\nimport { CanvasGradient } from './CanvasGradient';\nimport { CanvasPattern } from './CanvasPattern';\n/**\n * Handles calls to a CanvasRenderingContext2D object in cases where the user's environment does not\n * support native OffscreenCanvas.\n */\nexport class OffscreenCanvasPolyfill {\n    canvas;\n    context;\n    constructor(canvas) {\n        this.canvas = canvas;\n    }\n    getContext(contextType) {\n        if (!this.context) {\n            if (toLower(contextType) === '2d') {\n                this.context = new OffscreenCanvasRenderingContext2DPolyfill(this.canvas);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nclass OffscreenCanvasRenderingContext2DPolyfill {\n    canvasElement;\n    lineDash;\n    objectIndex = 0;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        this.lineDash = [];\n    }\n    [67 /* mutated */](fnName, args) {\n        transfer(this.canvasElement.ownerDocument, [\n            9 /* OBJECT_MUTATION */,\n            store(fnName),\n            args.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(args),\n        ]);\n    }\n    [68 /* serializeAsTransferrableObject */]() {\n        return [6 /* CanvasRenderingContext2D */, this.canvasElement[7 /* index */]];\n    }\n    /**\n     * Creates object in the main thread, and associates it with the id provided.\n     * @param objectId ID to associate the created object with.\n     * @param creationMethod Method to use for object creation.\n     * @param creationArgs Arguments to pass into the creation method.\n     */\n    createObjectReference(objectId, creationMethod, creationArgs) {\n        transfer(this.canvasElement.ownerDocument, [\n            10 /* OBJECT_CREATION */,\n            store(creationMethod),\n            objectId,\n            creationArgs.length,\n            ...this[68 /* serializeAsTransferrableObject */](),\n            ...serializeTransferrableObject(creationArgs),\n        ]);\n    }\n    get canvas() {\n        return this.canvasElement;\n    }\n    clearRect(x, y, w, h) {\n        this[67 /* mutated */]('clearRect', [...arguments]);\n    }\n    fillRect(x, y, w, h) {\n        this[67 /* mutated */]('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, w, h) {\n        this[67 /* mutated */]('strokeRect', [...arguments]);\n    }\n    set lineWidth(value) {\n        this[67 /* mutated */]('lineWidth', [...arguments]);\n    }\n    fillText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('fillText', [...arguments]);\n    }\n    moveTo(x, y) {\n        this[67 /* mutated */]('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this[67 /* mutated */]('lineTo', [...arguments]);\n    }\n    closePath() {\n        this[67 /* mutated */]('closePath', []);\n    }\n    stroke() {\n        this[67 /* mutated */]('stroke', []);\n    }\n    restore() {\n        this[67 /* mutated */]('restore', []);\n    }\n    save() {\n        this[67 /* mutated */]('save', []);\n    }\n    resetTransform() {\n        this[67 /* mutated */]('resetTransform', []);\n    }\n    rotate(angle) {\n        this[67 /* mutated */]('rotate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this[67 /* mutated */]('transform', [...arguments]);\n    }\n    translate(x, y) {\n        this[67 /* mutated */]('translate', [...arguments]);\n    }\n    scale(x, y) {\n        this[67 /* mutated */]('scale', [...arguments]);\n    }\n    set globalAlpha(value) {\n        this[67 /* mutated */]('globalAlpha', [...arguments]);\n    }\n    set globalCompositeOperation(value) {\n        this[67 /* mutated */]('globalCompositeOperation', [...arguments]);\n    }\n    set imageSmoothingQuality(value) {\n        this[67 /* mutated */]('imageSmoothingQuality', [...arguments]);\n    }\n    set fillStyle(value) {\n        this[67 /* mutated */]('fillStyle', [...arguments]);\n    }\n    set strokeStyle(value) {\n        this[67 /* mutated */]('strokeStyle', [...arguments]);\n    }\n    set shadowBlur(value) {\n        this[67 /* mutated */]('shadowBlur', [...arguments]);\n    }\n    set shadowColor(value) {\n        this[67 /* mutated */]('shadowColor', [...arguments]);\n    }\n    set shadowOffsetX(value) {\n        this[67 /* mutated */]('shadowOffsetX', [...arguments]);\n    }\n    set shadowOffsetY(value) {\n        this[67 /* mutated */]('shadowOffsetY', [...arguments]);\n    }\n    set filter(value) {\n        this[67 /* mutated */]('filter', [...arguments]);\n    }\n    beginPath() {\n        this[67 /* mutated */]('beginPath', []);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this[67 /* mutated */]('strokeText', [...arguments]);\n    }\n    set textAlign(value) {\n        this[67 /* mutated */]('textAlign', [...arguments]);\n    }\n    set textBaseline(value) {\n        this[67 /* mutated */]('textBaseline', [...arguments]);\n    }\n    set lineCap(value) {\n        this[67 /* mutated */]('lineCap', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this[67 /* mutated */]('lineDashOffset', [...arguments]);\n    }\n    set lineJoin(value) {\n        this[67 /* mutated */]('lineJoin', [...arguments]);\n    }\n    set miterLimit(value) {\n        this[67 /* mutated */]('miterLimit', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this[67 /* mutated */]('arcTo', [...arguments]);\n    }\n    set direction(value) {\n        this[67 /* mutated */]('direction', [...arguments]);\n    }\n    set font(value) {\n        this[67 /* mutated */]('font', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, anticlockwise) {\n        this[67 /* mutated */]('ellipse', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this[67 /* mutated */]('bezierCurveTo', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this[67 /* mutated */]('rect', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this[67 /* mutated */]('quadraticCurveTo', [...arguments]);\n    }\n    set imageSmoothingEnabled(value) {\n        this[67 /* mutated */]('imageSmoothingEnabled', [...arguments]);\n    }\n    setLineDash(lineDash) {\n        lineDash = [...lineDash];\n        if (lineDash.length % 2 !== 0) {\n            lineDash = lineDash.concat(lineDash);\n        }\n        this.lineDash = lineDash;\n        this[67 /* mutated */]('setLineDash', [...arguments]);\n    }\n    getLineDash() {\n        return [...this.lineDash];\n    }\n    clip(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('clip(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('clip', [...arguments]);\n    }\n    fill(pathOrFillRule, fillRule) {\n        if (typeof pathOrFillRule === 'object') {\n            throw new Error('fill(Path2D) is currently not supported!');\n        }\n        this[67 /* mutated */]('fill', [...arguments]);\n    }\n    // Method has a different signature in MDN than it does in HTML spec\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        if (typeof transformOrA === 'object') {\n            throw new Error('setTransform(DOMMatrix2DInit) is currently not supported!');\n        }\n        this[67 /* mutated */]('setTransform', [...arguments]);\n    }\n    createLinearGradient(x0, y0, x1, y1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createLinearGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        const gradientId = this.objectIndex++;\n        this.createObjectReference(gradientId, 'createRadialGradient', [...arguments]);\n        return new CanvasGradient(gradientId, this.canvasElement.ownerDocument);\n    }\n    createPattern(image, repetition) {\n        const patternId = this.objectIndex++;\n        this.createObjectReference(patternId, 'createPattern', [...arguments]);\n        return new CanvasPattern(patternId);\n    }\n    drawImage(image, dx, dy) {\n        this[67 /* mutated */]('drawImage', [...arguments]);\n    }\n    createImageData() {\n        return {};\n    }\n    getImageData() {\n        return {};\n    }\n    putImageData() { }\n    isPointInPath() {\n        throw new Error('isPointInPath is not implemented.');\n    }\n    isPointInStroke() {\n        throw new Error('isPointInStroke is not implemented.');\n    }\n    measureText() {\n        throw new Error('measureText is not implemented.');\n    }\n}\n//# sourceMappingURL=OffscreenCanvasPolyfill.js.map","import { retrieveImageBitmap } from './canvas-utils';\n/**\n * Wraps CanvasPattern for usage in a native OffscreenCanvas case.\n */\nexport class FakeNativeCanvasPattern {\n    [70 /* patternImplementation */] = {};\n    [71 /* patternUpgraded */] = false;\n    [72 /* patternUpgradePromise */];\n    /**\n     * Retrieves ImageBitmap object from main-thread, which replicates the input image. Upon\n     * retrieval, uses it to create a real CanvasPattern and upgrade the implementation property.\n     * @param canvas Canvas element used to create the pattern.\n     * @param image Image to be used as the pattern's image\n     * @param repetition DOMStrings indicating how to repeat the pattern's image.\n     */\n    [69 /* retrieveCanvasPattern */](canvas, image, repetition) {\n        this[72 /* patternUpgradePromise */] = retrieveImageBitmap(image, canvas)\n            // Create new pattern with retrieved ImageBitmap\n            .then((instance) => {\n            const pattern = canvas.getContext('2d').createPattern(instance, repetition);\n            if (!pattern) {\n                throw new Error('Pattern is null!');\n            }\n            this[70 /* patternImplementation */] = pattern;\n            this[71 /* patternUpgraded */] = true;\n        });\n        return this[72 /* patternUpgradePromise */];\n    }\n    // This method is experimental.\n    // Takes an SVGMatrix as an argument, which is a deprecated API.\n    setTransform() { }\n}\n//# sourceMappingURL=FakeNativeCanvasPattern.js.map","import { transfer } from '../MutationTransfer';\nimport { OffscreenCanvasPolyfill } from './OffscreenCanvasPolyfill';\nimport { FakeNativeCanvasPattern } from './FakeNativeCanvasPattern';\nimport { retrieveImageBitmap } from './canvas-utils';\nexport const deferredUpgrades = new WeakMap();\n/**\n * Delegates all CanvasRenderingContext2D calls, either to an OffscreenCanvas or a polyfill\n * (depending on whether it is supported).\n */\nexport class CanvasRenderingContext2DShim {\n    queue = [];\n    implementation;\n    upgraded = false;\n    canvasElement;\n    polyfillUsed;\n    // createPattern calls need to retrieve an ImageBitmap from the main-thread. Since those can\n    // happen subsequently, we must keep track of these to avoid reentrancy problems.\n    unresolvedCalls = 0;\n    goodImplementation;\n    constructor(canvas) {\n        this.canvasElement = canvas;\n        const OffscreenCanvas = canvas.ownerDocument.defaultView.OffscreenCanvas;\n        // If the browser does not support OffscreenCanvas, use polyfill\n        if (typeof OffscreenCanvas === 'undefined') {\n            this.implementation = new OffscreenCanvasPolyfill(canvas).getContext('2d');\n            this.upgraded = true;\n            this.polyfillUsed = true;\n        }\n        // If the browser supports OffscreenCanvas:\n        // 1. Use un-upgraded (not auto-synchronized) version for all calls performed immediately after\n        // creation. All calls will be queued to call on upgraded version after.\n        // 2. Retrieve an auto-synchronized OffscreenCanvas from the main-thread and call all methods\n        // in the queue.\n        else {\n            this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n            this.getOffscreenCanvasAsync(this.canvasElement);\n            this.polyfillUsed = false;\n        }\n    }\n    /**\n     * Retrieves auto-synchronized version of an OffscreenCanvas from the main-thread.\n     * @param canvas HTMLCanvasElement associated with this context.\n     */\n    getOffscreenCanvasAsync(canvas) {\n        this.unresolvedCalls++;\n        const deferred = {};\n        const document = this.canvasElement.ownerDocument;\n        const isTestMode = !document.addGlobalEventListener;\n        const upgradePromise = new Promise((resolve) => {\n            const messageHandler = ({ data }) => {\n                if (data[12 /* type */] === 9 /* OFFSCREEN_CANVAS_INSTANCE */ &&\n                    data[13 /* target */][0] === canvas[7 /* index */]) {\n                    document.removeGlobalEventListener('message', messageHandler);\n                    const transferredOffscreenCanvas = data[38 /* data */];\n                    resolve(transferredOffscreenCanvas);\n                }\n            };\n            if (!document.addGlobalEventListener) {\n                if (isTestMode) {\n                    deferred.resolve = resolve;\n                }\n                else {\n                    throw new Error('addGlobalEventListener is not defined.');\n                }\n            }\n            else {\n                document.addGlobalEventListener('message', messageHandler);\n                transfer(canvas.ownerDocument, [8 /* OFFSCREEN_CANVAS_INSTANCE */, canvas[7 /* index */]]);\n            }\n        }).then((instance) => {\n            this.goodImplementation = instance.getContext('2d');\n            this.maybeUpgradeImplementation();\n        });\n        if (isTestMode) {\n            deferred.upgradePromise = upgradePromise;\n            deferredUpgrades.set(canvas, deferred);\n        }\n        return upgradePromise;\n    }\n    /**\n     * Degrades the underlying context implementation and adds to the unresolved call count.\n     */\n    degradeImplementation() {\n        this.upgraded = false;\n        const OffscreenCanvas = this.canvasElement.ownerDocument.defaultView.OffscreenCanvas;\n        this.implementation = new OffscreenCanvas(0, 0).getContext('2d');\n        this.unresolvedCalls++;\n    }\n    /**\n     * Will upgrade the underlying context implementation if no more unresolved calls remain.\n     */\n    maybeUpgradeImplementation() {\n        this.unresolvedCalls--;\n        if (this.unresolvedCalls === 0) {\n            this.implementation = this.goodImplementation;\n            this.upgraded = true;\n            this.flushQueue();\n        }\n    }\n    flushQueue() {\n        for (const call of this.queue) {\n            if (call.isSetter) {\n                this[call.fnName] = call.args[0];\n            }\n            else {\n                this[call.fnName](...call.args);\n            }\n        }\n        this.queue.length = 0;\n    }\n    delegateFunc(name, args) {\n        const returnValue = this.implementation[name](...args);\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: false });\n        }\n        return returnValue;\n    }\n    delegateSetter(name, args) {\n        this.implementation[name] = args[0];\n        if (!this.upgraded) {\n            this.queue.push({ fnName: name, args, isSetter: true });\n        }\n    }\n    delegateGetter(name) {\n        return this.implementation[name];\n    }\n    /* DRAWING RECTANGLES */\n    clearRect(x, y, width, height) {\n        this.delegateFunc('clearRect', [...arguments]);\n    }\n    fillRect(x, y, width, height) {\n        this.delegateFunc('fillRect', [...arguments]);\n    }\n    strokeRect(x, y, width, height) {\n        this.delegateFunc('strokeRect', [...arguments]);\n    }\n    /* DRAWING TEXT */\n    fillText(text, x, y, maxWidth) {\n        this.delegateFunc('fillText', [...arguments]);\n    }\n    strokeText(text, x, y, maxWidth) {\n        this.delegateFunc('strokeText', [...arguments]);\n    }\n    measureText(text) {\n        return this.delegateFunc('measureText', [...arguments]);\n    }\n    /* LINE STYLES */\n    set lineWidth(value) {\n        this.delegateSetter('lineWidth', [...arguments]);\n    }\n    get lineWidth() {\n        return this.delegateGetter('lineWidth');\n    }\n    set lineCap(value) {\n        this.delegateSetter('lineCap', [...arguments]);\n    }\n    get lineCap() {\n        return this.delegateGetter('lineCap');\n    }\n    set lineJoin(value) {\n        this.delegateSetter('lineJoin', [...arguments]);\n    }\n    get lineJoin() {\n        return this.delegateGetter('lineJoin');\n    }\n    set miterLimit(value) {\n        this.delegateSetter('miterLimit', [...arguments]);\n    }\n    get miterLimit() {\n        return this.delegateGetter('miterLimit');\n    }\n    getLineDash() {\n        return this.delegateFunc('getLineDash', [...arguments]);\n    }\n    setLineDash(segments) {\n        this.delegateFunc('setLineDash', [...arguments]);\n    }\n    set lineDashOffset(value) {\n        this.delegateSetter('lineDashOffset', [...arguments]);\n    }\n    get lineDashOffset() {\n        return this.delegateGetter('lineDashOffset');\n    }\n    /* TEXT STYLES */\n    set font(value) {\n        this.delegateSetter('font', [...arguments]);\n    }\n    get font() {\n        return this.delegateGetter('font');\n    }\n    set textAlign(value) {\n        this.delegateSetter('textAlign', [...arguments]);\n    }\n    get textAlign() {\n        return this.delegateGetter('textAlign');\n    }\n    set textBaseline(value) {\n        this.delegateSetter('textBaseline', [...arguments]);\n    }\n    get textBaseline() {\n        return this.delegateGetter('textBaseline');\n    }\n    set direction(value) {\n        this.delegateSetter('direction', [...arguments]);\n    }\n    get direction() {\n        return this.delegateGetter('direction');\n    }\n    /* FILL AND STROKE STYLES */\n    set fillStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' will be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({ fnName: 'fillStyle', args: [value], isSetter: true });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('fillStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('fillStyle', [...arguments]);\n        }\n    }\n    get fillStyle() {\n        return this.delegateGetter('fillStyle');\n    }\n    set strokeStyle(value) {\n        // 1. Native pattern instances given to the user hold the 'real' pattern as their implementation prop.\n        // 2. Pattern must be upgraded, otherwise an undefined 'implementation' could be queued instead of the wrapper object.\n        if (value instanceof FakeNativeCanvasPattern && this.upgraded) {\n            // This case occurs only when an un-upgraded pattern is passed into a different (already\n            // upgraded) canvas context.\n            if (!value[71 /* patternUpgraded */]) {\n                this.queue.push({\n                    fnName: 'strokeStyle',\n                    args: [value],\n                    isSetter: true,\n                });\n                this.degradeImplementation();\n                value[72 /* patternUpgradePromise */].then(() => {\n                    this.maybeUpgradeImplementation();\n                });\n            }\n            else {\n                this.delegateSetter('strokeStyle', [value[70 /* patternImplementation */]]);\n            }\n            // Any other case does not require special handling.\n        }\n        else {\n            this.delegateSetter('strokeStyle', [...arguments]);\n        }\n    }\n    get strokeStyle() {\n        return this.delegateGetter('strokeStyle');\n    }\n    /* GRADIENTS AND PATTERNS */\n    createLinearGradient(x0, y0, x1, y1) {\n        return this.delegateFunc('createLinearGradient', [...arguments]);\n    }\n    createRadialGradient(x0, y0, r0, x1, y1, r1) {\n        return this.delegateFunc('createRadialGradient', [...arguments]);\n    }\n    createPattern(image, repetition) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            return this.delegateFunc('createPattern', [...arguments]);\n        }\n        else {\n            // Degrade the underlying implementation because we don't want calls on the real one until\n            // after pattern is retrieved\n            this.degradeImplementation();\n            const fakePattern = new FakeNativeCanvasPattern();\n            fakePattern[69 /* retrieveCanvasPattern */](this.canvas, image, repetition).then(() => {\n                this.maybeUpgradeImplementation();\n            });\n            return fakePattern;\n        }\n    }\n    /* DRAWING IMAGES */\n    drawImage(image, dx, dy) {\n        const ImageBitmap = this.canvasElement.ownerDocument.defaultView.ImageBitmap;\n        // Only HTMLElement image sources require special handling. ImageBitmap is OK to use.\n        if (this.polyfillUsed || image instanceof ImageBitmap) {\n            this.delegateFunc('drawImage', [...arguments]);\n        }\n        else {\n            // Queue the drawImage call to make sure it gets called in correct order\n            const args = [];\n            this.queue.push({ fnName: 'drawImage', args, isSetter: false });\n            // Degrade the underlying implementation because we don't want calls on the real one\n            // until after the ImageBitmap is received.\n            this.degradeImplementation();\n            // Retrieve an ImageBitmap from the main-thread with the same image as the input image\n            retrieveImageBitmap(image, this.canvas)\n                // Then call the actual method with the retrieved ImageBitmap\n                .then((instance) => {\n                args.push(instance, dx, dy);\n                this.maybeUpgradeImplementation();\n            });\n        }\n    }\n    /* SHADOWS */\n    set shadowBlur(value) {\n        this.delegateSetter('shadowBlur', [...arguments]);\n    }\n    get shadowBlur() {\n        return this.delegateGetter('shadowBlur');\n    }\n    set shadowColor(value) {\n        this.delegateSetter('shadowColor', [...arguments]);\n    }\n    get shadowColor() {\n        return this.delegateGetter('shadowColor');\n    }\n    set shadowOffsetX(value) {\n        this.delegateSetter('shadowOffsetX', [...arguments]);\n    }\n    get shadowOffsetX() {\n        return this.delegateGetter('shadowOffsetX');\n    }\n    set shadowOffsetY(value) {\n        this.delegateSetter('shadowOffsetY', [...arguments]);\n    }\n    get shadowOffsetY() {\n        return this.delegateGetter('shadowOffsetY');\n    }\n    /* PATHS */\n    beginPath() {\n        this.delegateFunc('beginPath', [...arguments]);\n    }\n    closePath() {\n        this.delegateFunc('closePath', [...arguments]);\n    }\n    moveTo(x, y) {\n        this.delegateFunc('moveTo', [...arguments]);\n    }\n    lineTo(x, y) {\n        this.delegateFunc('lineTo', [...arguments]);\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.delegateFunc('bezierCurveTo', [...arguments]);\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.delegateFunc('quadraticCurveTo', [...arguments]);\n    }\n    arc(x, y, radius, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('arc', [...arguments]);\n    }\n    arcTo(x1, y1, x2, y2, radius) {\n        this.delegateFunc('arcTo', [...arguments]);\n    }\n    ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {\n        this.delegateFunc('ellipse', [...arguments]);\n    }\n    rect(x, y, width, height) {\n        this.delegateFunc('rect', [...arguments]);\n    }\n    /* DRAWING PATHS */\n    fill(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('fill', args);\n    }\n    stroke(path) {\n        const args = [...arguments];\n        this.delegateFunc('stroke', args);\n    }\n    clip(pathOrFillRule, fillRule) {\n        const args = [...arguments];\n        this.delegateFunc('clip', args);\n    }\n    isPointInPath(pathOrX, xOrY, yOrFillRule, fillRule) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInPath', args);\n    }\n    isPointInStroke(pathOrX, xOrY, y) {\n        const args = [...arguments];\n        return this.delegateFunc('isPointInStroke', args);\n    }\n    /* TRANSFORMATIONS */\n    rotate(angle) {\n        this.delegateFunc('rotate', [...arguments]);\n    }\n    scale(x, y) {\n        this.delegateFunc('scale', [...arguments]);\n    }\n    translate(x, y) {\n        this.delegateFunc('translate', [...arguments]);\n    }\n    transform(a, b, c, d, e, f) {\n        this.delegateFunc('transform', [...arguments]);\n    }\n    setTransform(transformOrA, bOrC, cOrD, dOrE, eOrF, f) {\n        const args = [...arguments];\n        this.delegateFunc('setTransform', args);\n    }\n    /* experimental */ resetTransform() {\n        this.delegateFunc('resetTransform', [...arguments]);\n    }\n    /* COMPOSITING */\n    set globalAlpha(value) {\n        this.delegateSetter('globalAlpha', [...arguments]);\n    }\n    get globalAlpha() {\n        return this.delegateGetter('globalAlpha');\n    }\n    set globalCompositeOperation(value) {\n        this.delegateSetter('globalCompositeOperation', [...arguments]);\n    }\n    get globalCompositeOperation() {\n        return this.delegateGetter('globalCompositeOperation');\n    }\n    /* PIXEL MANIPULATION */\n    createImageData(imagedataOrWidth, height) {\n        const args = [...arguments];\n        return this.delegateFunc('createImageData', args);\n    }\n    getImageData(sx, sy, sw, sh) {\n        return this.delegateFunc('getImageData', [...arguments]);\n    }\n    putImageData(imageData, dx, dy, dirtyX, dirtyY, dirtyWidth, dirtyHeight) {\n        this.delegateFunc('putImageData', [...arguments]);\n    }\n    /* IMAGE SMOOTHING */\n    /* experimental */ set imageSmoothingEnabled(value) {\n        this.delegateSetter('imageSmoothingEnabled', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingEnabled() {\n        return this.delegateGetter('imageSmoothingEnabled');\n    }\n    /* experimental */ set imageSmoothingQuality(value) {\n        this.delegateSetter('imageSmoothingQuality', [...arguments]);\n    }\n    /* experimental */ get imageSmoothingQuality() {\n        return this.delegateGetter('imageSmoothingQuality');\n    }\n    /* THE CANVAS STATE */\n    save() {\n        this.delegateFunc('save', [...arguments]);\n    }\n    restore() {\n        this.delegateFunc('restore', [...arguments]);\n    }\n    // canvas property is readonly. We don't want to implement getters, but this must be here\n    // in order for TypeScript to not complain (for now)\n    get canvas() {\n        return this.canvasElement;\n    }\n    /* FILTERS */\n    /* experimental */ set filter(value) {\n        this.delegateSetter('filter', [...arguments]);\n    }\n    /* experimental */ get filter() {\n        return this.delegateGetter('filter');\n    }\n}\n//# sourceMappingURL=CanvasRenderingContext2D.js.map","import { HTMLElement } from './HTMLElement';\nimport { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { CanvasRenderingContext2DShim } from '../canvas/CanvasRenderingContext2D';\nexport class HTMLCanvasElement extends HTMLElement {\n    context;\n    getContext(contextType) {\n        if (!this.context) {\n            if (contextType === '2D' || contextType === '2d') {\n                this.context = new CanvasRenderingContext2DShim(this);\n            }\n            else {\n                throw new Error('Context type not supported.');\n            }\n        }\n        return this.context;\n    }\n}\nregisterSubclass('canvas', HTMLCanvasElement);\n// Reflected Properties\n// HTMLCanvasElement.height => number, reflected attribute\n// HTMLCanvasElement.width => number, reflected attribute\nreflectProperties([{ height: [0] }, { width: [0] }], HTMLCanvasElement);\n// Unimplemented Properties\n// HTMLCanvasElement.mozOpaque => boolean\n// HTMLCanvasElement.mozPrintCallback => function\n// Unimplemented Methods\n// HTMLCanvasElement.captureStream()\n// HTMLCanvasElement.toDataURL()\n// HTMLCanvasElement.toBlob()\n// HTMLCanvasElement.transferControlToOffscreen()\n// HTMLCanvasElement.mozGetAsFile()\n//# sourceMappingURL=HTMLCanvasElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLDataElement extends HTMLElement {\n}\nregisterSubclass('data', HTMLDataElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.value => string, reflected attribute\nreflectProperties([{ value: [''] }], HTMLDataElement);\n//# sourceMappingURL=HTMLDataElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nexport class HTMLDataListElement extends HTMLElement {\n    /**\n     * Getter returning option elements that are direct children of a HTMLDataListElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLDataListElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.childNodes.filter((node) => node.nodeName === 'OPTION');\n    }\n}\nregisterSubclass('datalist', HTMLDataListElement);\n/**\n * HTMLDataListElement.options Read only\n * Is a HTMLCollection representing a collection of the contained option elements.\n */\n/**\n * <label for=\"myBrowser\">Choose a browser from this list:</label>\n * <input list=\"browsers\" id=\"myBrowser\" name=\"myBrowser\" />\n * <datalist id=\"browsers\">\n *   <option value=\"Chrome\">\n *   <option value=\"Firefox\">\n *   <option value=\"Internet Explorer\">\n *   <option value=\"Opera\">\n *   <option value=\"Safari\">\n *   <option value=\"Microsoft Edge\">\n * </datalist>\n */\n//# sourceMappingURL=HTMLDataListElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLEmbedElement extends HTMLElement {\n}\nregisterSubclass('embed', HTMLEmbedElement);\n// Reflected properties, strings.\n// HTMLEmbedElement.height => string, reflected attribute\n// HTMLEmbedElement.src => string, reflected attribute\n// HTMLEmbedElement.type => string, reflected attribute\n// HTMLEmbedElement.width => string, reflected attribute\nreflectProperties([{ height: [''] }, { src: [''] }, { type: [''] }, { width: [''] }], HTMLEmbedElement);\n// Unimplemented\n// HTMLEmbedElement.align => string, not reflected\n// HTMLEmbedElement.name => string, not reflected\n//# sourceMappingURL=HTMLEmbedElement.js.map","import { matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nconst MATCHING_CHILD_ELEMENT_TAGNAMES = 'BUTTON FIELDSET INPUT OBJECT OUTPUT SELECT TEXTAREA'.split(' ');\n/**\n * The HTMLFormControlsCollection interface represents a collection of HTML form control elements.\n * It is mixedin to both HTMLFormElement and HTMLFieldSetElement.\n */\nexport const HTMLFormControlsCollectionMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'elements', {\n        /**\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormControlsCollection\n         * @return Element array matching children of specific tagnames.\n         */\n        get() {\n            return matchChildrenElements(this, tagNameConditionPredicate(MATCHING_CHILD_ELEMENT_TAGNAMES));\n        },\n    });\n};\n//# sourceMappingURL=HTMLFormControlsMixin.js.map","import { registerSubclass } from './Element';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { HTMLElement } from './HTMLElement';\nimport { toLower } from '../../utils';\nexport class HTMLFieldSetElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFieldSetElement\n     * @return hardcoded string 'fieldset'\n     */\n    get type() {\n        return toLower(this.tagName);\n    }\n}\nregisterSubclass('fieldset', HTMLFieldSetElement);\nHTMLFormControlsCollectionMixin(HTMLFieldSetElement);\n// Reflected properties\n// HTMLFieldSetElement.name => string, reflected attribute\n// HTMLFieldSetElement.disabled => boolean, reflected attribute\nreflectProperties([{ name: [''] }, { disabled: [false] }], HTMLFieldSetElement);\n// Unimplemented properties\n// HTMLFieldSetElement.validity\n// HTMLFieldSetElement.willValidate\n// HTMLFieldSetElement.validationMessage\n//# sourceMappingURL=HTMLFieldSetElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { HTMLFormControlsCollectionMixin } from './HTMLFormControlsMixin';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLFormElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.elements.length;\n    }\n}\nregisterSubclass('form', HTMLFormElement);\nHTMLFormControlsCollectionMixin(HTMLFormElement);\n// Reflected properties\n// HTMLFormElement.name => string, reflected attribute\n// HTMLFormElement.method => string, reflected attribute\n// HTMLFormElement.target => string, reflected attribute\n// HTMLFormElement.action => string, reflected attribute\n// HTMLFormElement.enctype => string, reflected attribute\n// HTMLFormElement.acceptCharset => string, reflected attribute\n// HTMLFormElement.autocomplete => string, reflected attribute\n// HTMLFormElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { name: [''] },\n    { method: ['get'] },\n    { target: [''] },\n    { action: [''] },\n    { enctype: ['application/x-www-form-urlencoded'] },\n    { acceptCharset: ['', /* attr */ 'accept-charset'] },\n    { autocomplete: ['on'] },\n    { autocapitalize: ['sentences'] },\n], HTMLFormElement);\n// Unimplemented properties\n// HTMLFormElement.encoding => string, reflected attribute\n// HTMLFormElement.noValidate => boolean, reflected attribute\n/*\nUnimplemented, TBD:\n\nNamed inputs are added to their owner form instance as properties, and can overwrite native properties\nif they share the same name (eg a form with an input named action will have its action property return\nthat input instead of the form's action HTML attribute).\n*/\n//# sourceMappingURL=HTMLFormElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nexport class HTMLIFrameElement extends HTMLElement {\n    _sandbox;\n    // HTMLIFrameElement.sandbox, DOMTokenList, reflected attribute\n    get sandbox() {\n        return this._sandbox || (this._sandbox = new DOMTokenList(this, 'sandbox'));\n    }\n}\nregisterSubclass('iframe', HTMLIFrameElement);\ndefinePropertyBackedAttributes(HTMLIFrameElement, {\n    sandbox: [(el) => el.sandbox.value, (el, value) => (el.sandbox.value = value)],\n});\n// Reflected properties\n// HTMLIFrameElement.allow => string, reflected attribute\n// HTMLIFrameElement.allowFullscreen => boolean, reflected attribute\n// HTMLIFrameElement.csp => string, reflected attribute\n// HTMLIFrameElement.height => string, reflected attribute\n// HTMLIFrameElement.name => string, reflected attribute\n// HTMLIFrameElement.referrerPolicy => string, reflected attribute\n// HTMLIFrameElement.src => string, reflected attribute\n// HTMLIFrameElement.srcdoc => string, reflected attribute\n// HTMLIFrameElement.width => string, reflected attribute\nreflectProperties([\n    { allow: [''] },\n    { allowFullscreen: [false] },\n    { csp: [''] },\n    { height: [''] },\n    { name: [''] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { srcdoc: [''] },\n    { width: [''] },\n], HTMLIFrameElement);\n// Unimplemented Properties\n// HTMLIFrameElement.allowPaymentRequest => boolean, reflected attribute\n// HTMLIFrameElement.contentDocument => Document, read only (active document in the inline frame's nested browsing context)\n// HTMLIFrameElement.contentWindow => WindowProxy, read only (window proxy for the nested browsing context)\n//# sourceMappingURL=HTMLIFrameElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLImageElement extends HTMLElement {\n}\nregisterSubclass('img', HTMLImageElement);\n// Reflected Properties\n// HTMLImageElement.alt => string, reflected attribute\n// HTMLImageElement.crossOrigin => string, reflected attribute\n// HTMLImageElement.height => number, reflected attribute\n// HTMLImageElement.isMap => boolean, reflected attribute\n// HTMLImageElement.referrerPolicy => string, reflected attribute\n// HTMLImageElement.src => string, reflected attribute\n// HTMLImageElement.sizes => string, reflected attribute\n// HTMLImageElement.srcset => string, reflected attribute\n// HTMLImageElement.useMap => string, reflected attribute\n// HTMLImageElement.width => number, reflected attribute\nreflectProperties([\n    { alt: [''] },\n    { crossOrigin: [''] },\n    { height: [0] },\n    { isMap: [false] },\n    { referrerPolicy: [''] },\n    { src: [''] },\n    { sizes: [''] },\n    { srcset: [''] },\n    { useMap: [''] },\n    { width: [0] },\n], HTMLImageElement);\n// Unimplmented Properties\n// HTMLImageElement.complete Read only\n// Returns a Boolean that is true if the browser has finished fetching the image, whether successful or not. It also shows true, if the image has no src value.\n// HTMLImageElement.currentSrc Read only\n// Returns a DOMString representing the URL to the currently displayed image (which may change, for example in response to media queries).\n// HTMLImageElement.naturalHeight Read only\n// Returns a unsigned long representing the intrinsic height of the image in CSS pixels, if it is available; else, it shows 0.\n// HTMLImageElement.naturalWidth Read only\n// Returns a unsigned long representing the intrinsic width of the image in CSS pixels, if it is available; otherwise, it will show 0.\n//# sourceMappingURL=HTMLImageElement.js.map","import { matchChildrenElements } from './matchElements';\n/**\n * The HTMLInputLabels interface represents a collection of input getters for their related label Elements.\n * It is mixedin to both HTMLInputElement, HTMLMeterElement, and HTMLProgressElement.\n */\nexport const HTMLInputLabelsMixin = (defineOn) => {\n    Object.defineProperty(defineOn.prototype, 'labels', {\n        /**\n         * Getter returning label elements associated to this meter.\n         * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLProgressElement/labels\n         * @return label elements associated to this meter.\n         */\n        get() {\n            return matchChildrenElements(this.ownerDocument || this, (element) => element.tagName === 'LABEL' && element.for && element.for === this.id);\n        },\n    });\n};\n//# sourceMappingURL=HTMLInputLabelsMixin.js.map","import { HTMLElement } from './HTMLElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { reflectProperties } from './enhanceElement';\nimport { registerSubclass } from './Element';\nimport { store as storeString } from '../strings';\nimport { transfer } from '../MutationTransfer';\nexport class HTMLInputElement extends HTMLElement {\n    // Per spec, some attributes like 'value' and 'checked' change behavior based on dirty flags.\n    // Since these flags can only be changed on interaction (outside of worker), we can ignore them here.\n    // Tradeoffs: Consequent attribute changes are missing, HTMLFormElement.reset() doesn't work, etc.\n    // Alternative: Implement dirty flag checking in worker-dom, which would require listening for\n    //     and forwarding interaction events to flag \"dirtiness\".\n    // https://html.spec.whatwg.org/multipage/input.html#common-input-element-apis\n    [21 /* value */] = '';\n    dirtyValue = false;\n    [47 /* checked */] = false;\n    // TODO(willchou): There are a few interrelated issues with `value` property.\n    //   1. \"Dirtiness\" caveat above.\n    //   2. Duplicate SYNC events. Sent by every event fired from elements with a `value`, plus the default 'change' listener.\n    //   3. Duplicate MUTATE events. Caused by stale `value` in worker due to no default 'input' listener (see below).\n    get value() {\n        return !this.dirtyValue ? this.getAttribute('value') || '' : this[21 /* value */];\n    }\n    set value(value) {\n        // Don't early-out if value doesn't appear to have changed.\n        // The worker may have a stale value since 'input' events aren't being forwarded.\n        this[21 /* value */] = String(value);\n        this.dirtyValue = true;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('value'),\n            0 /* FALSE */,\n            storeString(value),\n        ]);\n    }\n    get valueAsDate() {\n        // Don't use Date constructor or Date.parse() since ISO 8601 (yyyy-mm-dd) parsing is inconsistent.\n        const date = this.stringToDate(this.value);\n        const invalid = !date || isNaN(date.getTime());\n        return invalid ? null : date;\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support dates. */\n    set valueAsDate(value) {\n        if (!(value instanceof Date)) {\n            throw new TypeError('The provided value is not a Date.');\n        }\n        this.value = this.dateToString(value);\n    }\n    get valueAsNumber() {\n        if (this.value.length === 0) {\n            return NaN;\n        }\n        return Number(this.value);\n    }\n    /** Unlike browsers, does not throw if this input[type] doesn't support numbers. */\n    set valueAsNumber(value) {\n        if (typeof value === 'number') {\n            this.value = String(value);\n        }\n        else {\n            this.value = '';\n        }\n    }\n    get checked() {\n        return this[47 /* checked */];\n    }\n    set checked(value) {\n        if (this[47 /* checked */] === value) {\n            return;\n        }\n        this[47 /* checked */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('checked'),\n            1 /* TRUE */,\n            value === true ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * Returns a date in 'yyyy-mm-dd' format.\n     * @param date\n     */\n    dateToString(date) {\n        const y = date.getFullYear();\n        const m = date.getMonth() + 1; // getMonth() is 0-index.\n        const d = date.getDate();\n        return `${y}-${m > 9 ? '' : '0'}${m}-${d > 9 ? '' : '0'}${d}`;\n    }\n    /**\n     * Returns a Date from a 'yyyy-mm-dd' format.\n     * @param s\n     */\n    stringToDate(str) {\n        const components = str.split('-');\n        if (components.length !== 3) {\n            return null;\n        }\n        const [y, m, d] = components;\n        // Month is 0-index.\n        return new Date(parseInt(y, 10), parseInt(m, 10) - 1, parseInt(d, 10));\n    }\n}\nregisterSubclass('input', HTMLInputElement);\nHTMLInputLabelsMixin(HTMLInputElement);\n// Reflected Properties\n// HTMLInputElement.formAction => string, reflected attribute\n// HTMLInputElement.formEncType\t=> string, reflected attribute\n// HTMLInputElement.formMethod => string, reflected attribute\n// HTMLInputElement.formTarget => string, reflected attribute\n// HTMLInputElement.name => string, reflected attribute\n// HTMLInputElement.type => string, reflected attribute\n// HTMLInputElement.disabled => boolean, reflected attribute\n// HTMLInputElement.autofocus => boolean, reflected attribute\n// HTMLInputElement.required => boolean, reflected attribute\n// HTMLInputElement.defaultChecked => boolean, reflected attribute (\"checked\")\n// HTMLInputElement.alt => string, reflected attribute\n// HTMLInputElement.height => number, reflected attribute\n// HTMLInputElement.src => string, reflected attribute\n// HTMLInputElement.width => number, reflected attribute\n// HTMLInputElement.accept => string, reflected attribute\n// HTMLInputElement.autocomplete => string, reflected attribute\n// HTMLInputElement.maxLength => number, reflected attribute\n// HTMLInputElement.size => number, reflected attribute\n// HTMLInputElement.pattern => string, reflected attribute\n// HTMLInputElement.placeholder => string, reflected attribute\n// HTMLInputElement.readOnly => boolean, reflected attribute\n// HTMLInputElement.min => string, reflected attribute\n// HTMLInputElement.max => string, reflected attribute\n// HTMLInputElement.defaultValue => string, reflected attribute\n// HTMLInputElement.dirname => string, reflected attribute\n// HTMLInputElement.multiple => boolean, reflected attribute\n// HTMLInputElement.step => string, reflected attribute\n// HTMLInputElement.autocapitalize => string, reflected attribute\nreflectProperties([\n    { accept: [''] },\n    { alt: [''] },\n    { autocapitalize: [''] },\n    { autocomplete: [''] },\n    { autofocus: [false] },\n    { defaultChecked: [false, /* attr */ 'checked'] },\n    { defaultValue: ['', /* attr */ 'value'] },\n    { dirName: [''] },\n    { disabled: [false] },\n    { formAction: [''] },\n    { formEncType: [''] },\n    { formMethod: [''] },\n    { formTarget: [''] },\n    { height: [0] },\n    { max: [''] },\n    { maxLength: [0] },\n    { min: [''] },\n    { multiple: [false] },\n    { name: [''] },\n    { pattern: [''] },\n    { placeholder: [''] },\n    { readOnly: [false] },\n    { required: [false] },\n    { size: [0] },\n    { src: [''] },\n    { step: [''] },\n    { type: ['text'] },\n    { width: [0] },\n], HTMLInputElement);\n// TODO(KB) Not Reflected Properties\n// HTMLInputElement.indeterminate => boolean\n// Unimplemented Properties\n// HTMLInputElement.formNoValidate => string, reflected attribute\n// HTMLInputElement.validity => ValidityState, readonly\n// HTMLInputElement.validationMessage => string, readonly\n// HTMLInputElement.willValidate => boolean, readonly\n// HTMLInputElement.allowdirs => boolean\n// HTMLInputElement.files\t=> Array<File>\n// HTMLInputElement.webkitdirectory\t=> boolean, reflected attribute\n// HTMLInputElement.webkitEntries => Array<FileSystemEntry>\n// HTMLInputElement.selectionStart => number\n// HTMLInputElement.selectionEnd => number\n// HTMLInputElement.selectionDirection => string\n// HTMLInputElement.list => Element, read only (element pointed by list attribute)\n// Unimplemented Methods\n// HTMLInputElement.setSelectionRange()\n// HTMLInputElement.setRangeText()\n// HTMLInputElement.setCustomValidity()\n// HTMLInputElement.checkValidity()\n// HTMLInputElement.stepDown()\n// HTMLInputElement.stepUp()\n//# sourceMappingURL=HTMLInputElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildElement, tagNameConditionPredicate } from './matchElements';\nexport class HTMLLabelElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control\n     * @return input element\n     */\n    get control() {\n        const htmlFor = this.getAttribute('for');\n        if (htmlFor !== null) {\n            return this.ownerDocument && this.ownerDocument.getElementById(htmlFor);\n        }\n        return matchChildElement(this, tagNameConditionPredicate(['INPUT']));\n    }\n}\nregisterSubclass('label', HTMLLabelElement);\n// Reflected Properties\n// HTMLLabelElement.htmlFor => string, reflected attribute 'for'\nreflectProperties([{ htmlFor: ['', 'for'] }], HTMLLabelElement);\n//# sourceMappingURL=HTMLLabelElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList, synchronizedAccessor } from './DOMTokenList';\nexport class HTMLLinkElement extends HTMLElement {\n    _relList;\n    get relList() {\n        return this._relList || (this._relList = new DOMTokenList(this, 'rel'));\n    }\n}\nregisterSubclass('link', HTMLLinkElement);\ndefinePropertyBackedAttributes(HTMLLinkElement, {\n    rel: [(el) => el.relList.value, (el, value) => (el.relList.value = value)],\n});\nsynchronizedAccessor(HTMLLinkElement, 'relList', 'rel');\n// Reflected Properties\n// HTMLLinkElement.as => string, reflected attribute\n// HTMLLinkElement.crossOrigin => string, reflected attribute\n// HTMLLinkElement.disabled => boolean, reflected attribute\n// HTMLLinkElement.href => string, reflected attribute\n// HTMLLinkElement.hreflang => string, reflected attribute\n// HTMLLinkElement.media => string, reflected attribute\n// HTMLLinkElement.referrerPolicy => string, reflected attribute\n// HTMLLinkElement.sizes => string, reflected attribute\n// HTMLLinkElement.type => string, reflected attribute\nreflectProperties([\n    { as: [''] },\n    { crossOrigin: [''] },\n    { disabled: [false] },\n    { href: [''] },\n    { hreflang: [''] },\n    { media: [''] },\n    { referrerPolicy: [''] },\n    { sizes: [''] },\n    { type: [''] },\n], HTMLLinkElement);\n// Unimplemented Properties\n// LinkStyle.sheet Read only\n// Returns the StyleSheet object associated with the given element, or null if there is none.\n//# sourceMappingURL=HTMLLinkElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { matchChildrenElements } from './matchElements';\nexport class HTMLMapElement extends HTMLElement {\n    /**\n     * Getter returning area elements associated to this map.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMapElement\n     * @return area elements associated to this map.\n     */\n    get areas() {\n        return matchChildrenElements(this, (element) => element.tagName === 'AREA');\n    }\n}\nregisterSubclass('map', HTMLMapElement);\n// Reflected Properties\n// HTMLMapElement.name => string, reflected attribute\nreflectProperties([{ name: [''] }], HTMLMapElement);\n//# sourceMappingURL=HTMLMapElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLMeterElement extends HTMLElement {\n}\nregisterSubclass('meter', HTMLMeterElement);\nHTMLInputLabelsMixin(HTMLMeterElement);\n// Reflected Properties\n// HTMLMeterElement.high => number, reflected attribute\n// HTMLMeterElement.low => number, reflected attribute\n// HTMLMeterElement.max => number, reflected attribute\n// HTMLMeterElement.min => number, reflected attribute\n// HTMLMeterElement.optimum => number, reflected attribute\n// HTMLMeterElement.value => number, reflected attribute\nreflectProperties([{ high: [0] }, { low: [0] }, { max: [1] }, { min: [0] }, { optimum: [0] }, { value: [0] }], HTMLMeterElement);\n//# sourceMappingURL=HTMLMeterElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLModElement extends HTMLElement {\n}\nregisterSubclass('del', HTMLModElement);\nregisterSubclass('ins', HTMLModElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\n// HTMLModElement.datetime => string, reflected attribute\nreflectProperties([{ cite: [''] }, { datetime: [''] }], HTMLModElement);\n//# sourceMappingURL=HTMLModElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLOListElement extends HTMLElement {\n}\nregisterSubclass('ol', HTMLOListElement);\n// Reflected Properties\n// HTMLModElement.reversed => boolean, reflected attribute\n// HTMLModElement.start => number, reflected attribute\n// HTMLOListElement.type => string, reflected attribute\nreflectProperties([{ reversed: [false] }, { start: [1] }, { type: [''] }], HTMLOListElement);\n//# sourceMappingURL=HTMLOListElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { transfer } from '../MutationTransfer';\nimport { store as storeString } from '../strings';\nexport class HTMLOptionElement extends HTMLElement {\n    [52 /* selected */] = false;\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return position of the option within the list of options it's within, or zero if there is no valid parent.\n     */\n    get index() {\n        return (this.parentNode && this.parentNode.children.indexOf(this)) || 0;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return label attribute value or text content if there is no attribute.\n     */\n    get label() {\n        return this.getAttribute('label') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param label new label value to store as an attribute.\n     */\n    set label(label) {\n        this.setAttribute('label', label);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return boolean based on if the option element is selected.\n     */\n    get selected() {\n        return this[52 /* selected */];\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new selected boolean value.\n     */\n    set selected(value) {\n        this[52 /* selected */] = !!value;\n        transfer(this.ownerDocument, [\n            3 /* PROPERTIES */,\n            this[7 /* index */],\n            storeString('selected'),\n            1 /* TRUE */,\n            this[52 /* selected */] ? 1 /* TRUE */ : 0 /* FALSE */,\n        ]);\n    }\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @return value attribute value or text content if there is no attribute.\n     */\n    get value() {\n        return this.getAttribute('value') || this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLOptionElement\n     * @param value new value for an option element.\n     */\n    set value(value) {\n        this.setAttribute('value', value);\n    }\n}\nregisterSubclass('option', HTMLOptionElement);\ndefinePropertyBackedAttributes(HTMLOptionElement, {\n    selected: [(el) => String(el[52 /* selected */]), (el, value) => (el.selected = value === 'true')],\n});\n// Reflected Properties\n// HTMLOptionElement.defaultSelected => boolean, reflected attribute\n// HTMLOptionElement.disabled => boolean, reflected attribute\n// HTMLOptionElement.type => string, reflected attribute\nreflectProperties([{ defaultSelected: [false, /* attr */ 'selected'] }, { disabled: [false] }, { type: [''] }], HTMLOptionElement);\n// Implemented at HTMLElement\n// HTMLOptionElement.form, Read only\t=> HTMLFormElement\n//# sourceMappingURL=HTMLOptionElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nexport class HTMLProgressElement extends HTMLElement {\n    [48 /* indeterminate */] = true;\n    [21 /* value */] = 0;\n    dirtyValue = false;\n    get position() {\n        return this[48 /* indeterminate */] ? -1 : this.value / this.max;\n    }\n    get value() {\n        return !this.dirtyValue ? Number(this.getAttribute('value')) || 0 : this[21 /* value */];\n    }\n    set value(value) {\n        this[48 /* indeterminate */] = false;\n        this[21 /* value */] = value;\n        this.dirtyValue = true;\n        // TODO(KB) This is a property mutation needing tracked.\n    }\n}\nregisterSubclass('progress', HTMLProgressElement);\nHTMLInputLabelsMixin(HTMLProgressElement);\n// Reflected Properties\n// HTMLModElement.max => number, reflected attribute\nreflectProperties([{ max: [1] }], HTMLProgressElement);\n//# sourceMappingURL=HTMLProgressElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLQuoteElement extends HTMLElement {\n}\nregisterSubclass('blockquote', HTMLQuoteElement);\nregisterSubclass('q', HTMLQuoteElement);\n// Reflected Properties\n// HTMLModElement.cite => string, reflected attribute\nreflectProperties([{ cite: [''] }], HTMLQuoteElement);\n//# sourceMappingURL=HTMLQuoteElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLScriptElement extends HTMLElement {\n    /**\n     * A Synonym for the Node.textContent property getter.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @return value of text node direct child of this Element.\n     */\n    get text() {\n        return this.textContent;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n     * @param text new text content to store for this Element.\n     */\n    set text(text) {\n        this.textContent = text;\n    }\n}\nregisterSubclass('script', HTMLScriptElement);\n// Reflected Properties\n// HTMLScriptElement.type => string, reflected attribute\n// HTMLScriptElement.src => string, reflected attribute\n// HTMLScriptElement.charset => string, reflected attribute\n// HTMLScriptElement.async => boolean, reflected attribute\n// HTMLScriptElement.defer => boolean, reflected attribute\n// HTMLScriptElement.crossOrigin => string, reflected attribute\n// HTMLScriptElement.noModule => boolean, reflected attribute\nreflectProperties([{ type: [''] }, { src: [''] }, { charset: [''] }, { async: [false] }, { defer: [false] }, { crossOrigin: [''] }, { noModule: [false] }], HTMLScriptElement);\n//# sourceMappingURL=HTMLScriptElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { HTMLInputLabelsMixin } from './HTMLInputLabelsMixin';\nimport { matchChildrenElements, matchChildElement, tagNameConditionPredicate } from './matchElements';\nconst isOptionPredicate = tagNameConditionPredicate(['OPTION']);\nconst isSelectedOptionPredicate = (element) => isOptionPredicate(element) && element.selected === true;\nexport class HTMLSelectElement extends HTMLElement {\n    [49 /* size */] = -1 /* UNMODIFIED */;\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [56 /* insertedNode */](child) {\n        super[56 /* insertedNode */](child);\n        // When this singular value select is appending a child, set the value property for two cases.\n        // 1. The inserted child is already selected.\n        // 2. The current value of the select is the default ('').\n        if ((!this.multiple && isOptionPredicate(child) && child.selected) || this.value === '') {\n            this.value = child.value;\n        }\n    }\n    /**\n     * Extend functionality after child insertion to make sure the correct option is selected.\n     * @param child\n     */\n    [57 /* removedNode */](child) {\n        super[57 /* removedNode */](child);\n        // When this singular value select is removing a selected child\n        // ... set the value property to the first valid option.\n        if (!this.multiple && child.selected) {\n            const options = this.options;\n            if (options.length > 0) {\n                this.value = options[0].value;\n            }\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/length\n     * @return number of controls in the form\n     */\n    get length() {\n        return this.options.length;\n    }\n    /**\n     * Getter returning option elements that are direct children of a HTMLSelectElement\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return Element \"options\" objects that are direct children.\n     */\n    get options() {\n        return this.children.filter(isOptionPredicate);\n    }\n    /**\n     * Getter returning the index of the first selected <option> element.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @return the index of the first selected option element, or -1 if no element is selected.\n     */\n    get selectedIndex() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? this.children.indexOf(firstSelectedChild) : -1;\n    }\n    /**\n     * Setter making the <option> element at the passed index selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedIndex\n     * @param selectedIndex index number to make selected.\n     */\n    set selectedIndex(selectedIndex) {\n        this.children.forEach((element, index) => (element.selected = index === selectedIndex));\n    }\n    /**\n     * Getter returning the <option> elements selected.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement/selectedOptions\n     * @return array of Elements currently selected.\n     */\n    get selectedOptions() {\n        return matchChildrenElements(this, isSelectedOptionPredicate);\n    }\n    /**\n     * Getter returning the size of the select element (by default 1 for single and 4 for multiple)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return size of the select element.\n     */\n    get size() {\n        return this[49 /* size */] === -1 /* UNMODIFIED */\n            ? this.multiple\n                ? 4 /* MULTIPLE */\n                : 1 /* SINGLE */\n            : this[49 /* size */];\n    }\n    /**\n     * Override the size of this element (each positive unit is the height of a single option)\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @param size number to set the size to.\n     */\n    set size(size) {\n        this[49 /* size */] = size > 0 ? size : this.multiple ? 4 /* MULTIPLE */ : 1 /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return string representing the select element type.\n     */\n    get type() {\n        return this.multiple ? \"select-one\" /* MULTIPLE */ : \"select-multiple\" /* SINGLE */;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @return the value of the first selected option\n     */\n    get value() {\n        const firstSelectedChild = matchChildElement(this, isSelectedOptionPredicate);\n        return firstSelectedChild ? firstSelectedChild.value : '';\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement\n     * @set value\n     */\n    set value(value) {\n        const stringValue = String(value);\n        this.children.forEach((element) => isOptionPredicate(element) && (element.selected = element.value === stringValue));\n    }\n}\nregisterSubclass('select', HTMLSelectElement);\nHTMLInputLabelsMixin(HTMLSelectElement);\n// Reflected Properties\n// HTMLSelectElement.multiple => boolean, reflected attribute\n// HTMLSelectElement.name => string, reflected attribute\n// HTMLSelectElement.required => boolean, reflected attribute\nreflectProperties([{ multiple: [false] }, { name: [''] }, { required: [false] }], HTMLSelectElement);\n// Implemented on HTMLElement\n// HTMLSelectElement.form => HTMLFormElement, readonly\n// Unimplemented Properties\n// HTMLSelectElement.validation => string\n// HTMLSelectElement.validity => ValidityState\n// HTMLSelectElement.willValidate => boolean\n//# sourceMappingURL=HTMLSelectElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLSourceElement extends HTMLElement {\n}\nregisterSubclass('source', HTMLSourceElement);\n// Reflected Properties\n// HTMLSourceElement.media => string, reflected attribute\n// HTMLSourceElement.sizes => string, reflected attribute\n// HTMLSourceElement.src => string, reflected attribute\n// HTMLSourceElement.srcset => string, reflected attribute\n// HTMLSourceElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { sizes: [''] }, { src: [''] }, { srcset: [''] }, { type: [''] }], HTMLSourceElement);\n// Unimplemented Properties\n// HTMLSourceElement.keySystem => string\n//# sourceMappingURL=HTMLSourceElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLStyleElement extends HTMLElement {\n}\nregisterSubclass('style', HTMLStyleElement);\n// Reflected Properties\n// HTMLStyleElement.media => string, reflected attribute\n// HTMLStyleElement.type => string, reflected attribute\nreflectProperties([{ media: [''] }, { type: [''] }], HTMLStyleElement);\n// Unimplemented Properties\n// HTMLStyleElement.disabled => boolean\n// HTMLStyleElement.scoped => boolean, reflected attribute\n// HTMLStyleElement.sheet => StyleSheet, read only\n//# sourceMappingURL=HTMLStyleElement.js.map","import { registerSubclass, definePropertyBackedAttributes } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nimport { DOMTokenList } from './DOMTokenList';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableCellElement extends HTMLElement {\n    _headers;\n    get headers() {\n        return this._headers || (this._headers = new DOMTokenList(this, 'headers'));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableCellElement\n     * @return position of the cell within the parent tr, if not nested in a tr the value is -1.\n     */\n    get cellIndex() {\n        const parent = matchNearestParent(this, tagNameConditionPredicate(['TR']));\n        return parent !== null ? matchChildrenElements(parent, tagNameConditionPredicate(['TH', 'TD'])).indexOf(this) : -1;\n    }\n}\nregisterSubclass('th', HTMLTableCellElement);\nregisterSubclass('td', HTMLTableCellElement);\ndefinePropertyBackedAttributes(HTMLTableCellElement, {\n    headers: [(el) => el.headers.value, (el, value) => (el.headers.value = value)],\n});\n// Reflected Properties\n// HTMLTableCellElement.abbr => string, reflected attribute\n// HTMLTableCellElement.colSpan => number, reflected attribute\n// HTMLTableCellElement.rowSpan => number, reflected attribute\n// HTMLTableCellElement.scope => string, reflected attribute\nreflectProperties([{ abbr: [''] }, { colSpan: [1] }, { rowSpan: [1] }, { scope: [''] }], HTMLTableCellElement);\n//# sourceMappingURL=HTMLTableCellElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTableColElement extends HTMLElement {\n}\nregisterSubclass('col', HTMLTableColElement);\n// Reflected Properties\n// HTMLTableColElement.span => number, reflected attribute\nreflectProperties([{ span: [1] }], HTMLTableColElement);\n//# sourceMappingURL=HTMLTableColElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchChildElement, matchChildrenElements, tagNameConditionPredicate } from './matchElements';\nimport { toUpper } from '../../utils';\nconst removeElement = (element) => element && element.remove();\nconst insertBeforeElementsWithTagName = (parent, element, tagNames) => {\n    console.assert(tagNames.every((t) => t === toUpper(t)), 'tagNames must be all uppercase.');\n    const insertBeforeElement = matchChildElement(parent, (element) => !tagNames.includes(element.tagName));\n    if (insertBeforeElement) {\n        parent.insertBefore(element, insertBeforeElement);\n    }\n    else {\n        parent.appendChild(element);\n    }\n};\nexport class HTMLTableElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @return first matching caption Element or null if none exists.\n     */\n    get caption() {\n        return matchChildElement(this, tagNameConditionPredicate(['CAPTION']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/caption\n     * @param element new caption element to replace the existing, or become the first element child.\n     */\n    set caption(newElement) {\n        if (newElement && newElement.tagName === 'CAPTION') {\n            // If a correct object is given,\n            // it is inserted in the tree as the first child of this element and the first <caption>\n            // that is a child of this element is removed from the tree, if any.\n            removeElement(this.caption);\n            this.insertBefore(newElement, this.firstElementChild);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tHead() {\n        return matchChildElement(this, tagNameConditionPredicate(['THEAD']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new thead element to insert in this table.\n     */\n    set tHead(newElement) {\n        if (newElement && newElement.tagName === 'THEAD') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is\n            // neither a <caption>, nor a <colgroup>, or as the last child if there is no such element.\n            // Additionally, the first <thead> that is a child of this element is removed from the tree, if any.\n            removeElement(this.tHead);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @return first matching thead Element or null if none exists.\n     */\n    get tFoot() {\n        return matchChildElement(this, tagNameConditionPredicate(['TFOOT']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/tHead\n     * @param newElement new tfoot element to insert in this table.\n     */\n    set tFoot(newElement) {\n        if (newElement && newElement.tagName === 'TFOOT') {\n            // If a correct object is given,\n            // it is inserted in the tree immediately before the first element that is neither a <caption>,\n            // a <colgroup>, nor a <thead>, or as the last child if there is no such element, and the first <tfoot> that is a child of\n            // this element is removed from the tree, if any.\n            removeElement(this.tFoot);\n            insertBeforeElementsWithTagName(this, newElement, ['CAPTION', 'COLGROUP', 'THEAD']);\n        }\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tr' tagname elements\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement\n     * @return array of 'tbody' tagname elements\n     */\n    get tBodies() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TBODY']));\n    }\n}\nregisterSubclass('table', HTMLTableElement);\n// Unimplemented Properties\n// HTMLTableElement.sortable => boolean\n// Unimplemented Methods\n// HTMLTableElement.createTHead()\n// HTMLTableElement.deleteTHead()\n// HTMLTableElement.createTFoot()\n// HTMLTableElement.deleteTFoot()\n// HTMLTableElement.createCaption()\n// HTMLTableElement.deleteCaption()\n// HTMLTableElement.insertRow()\n// HTMLTableElement.deleteRow()\n//# sourceMappingURL=HTMLTableElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { matchNearestParent, tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nconst TABLE_SECTION_TAGNAMES = 'TABLE TBODY THEAD TFOOT'.split(' ');\nconst indexInAncestor = (element, isValidAncestor) => {\n    const parent = matchNearestParent(element, isValidAncestor);\n    // TODO(KB): This is either a HTMLTableElement or HTMLTableSectionElement.\n    return parent === null ? -1 : parent.rows.indexOf(element);\n};\nexport class HTMLTableRowElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return td and th elements that are children of this row.\n     */\n    get cells() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TD', 'TH']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a table, if not nested within in a table the value is -1.\n     */\n    get rowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(['TABLE']));\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @return position of the row within a parent section, if not nested directly in a section the value is -1.\n     */\n    get sectionRowIndex() {\n        return indexInAncestor(this, tagNameConditionPredicate(TABLE_SECTION_TAGNAMES));\n    }\n    /**\n     * Removes the cell in provided position of this row.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableRowElement\n     * @param index position of the cell in the row to remove.\n     */\n    deleteCell(index) {\n        const cell = this.cells[index];\n        if (cell) {\n            cell.remove();\n        }\n    }\n    /**\n     * Insert a new cell ('td') in the row at a specified position.\n     * @param index position in the children to insert before.\n     * @return newly inserted td element.\n     */\n    insertCell(index) {\n        const cells = this.cells;\n        const td = this.ownerDocument.createElement('td');\n        if (index < 0 || index >= cells.length) {\n            this.appendChild(td);\n        }\n        else {\n            this.insertBefore(td, this.children[index]);\n        }\n        return td;\n    }\n}\nregisterSubclass('tr', HTMLTableRowElement);\n//# sourceMappingURL=HTMLTableRowElement.js.map","import { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { tagNameConditionPredicate, matchChildrenElements } from './matchElements';\nexport class HTMLTableSectionElement extends HTMLElement {\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @return All rows (tr elements) within the table section.\n     */\n    get rows() {\n        return matchChildrenElements(this, tagNameConditionPredicate(['TR']));\n    }\n    /**\n     * Remove a node in a specified position from the section.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the section to remove the node of.\n     */\n    deleteRow(index) {\n        const rows = this.rows;\n        if (index >= 0 || index <= rows.length) {\n            rows[index].remove();\n        }\n    }\n    /**\n     * Insert a new row ('tr') in the row at a specified position.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableSectionElement\n     * @param index position in the children to insert before.\n     * @return newly inserted tr element.\n     */\n    insertRow(index) {\n        const rows = this.rows;\n        const tr = this.ownerDocument.createElement('tr');\n        if (index < 0 || index >= rows.length) {\n            this.appendChild(tr);\n        }\n        else {\n            this.insertBefore(tr, this.children[index]);\n        }\n        return tr;\n    }\n}\nregisterSubclass('thead', HTMLTableSectionElement);\nregisterSubclass('tfoot', HTMLTableSectionElement);\nregisterSubclass('tbody', HTMLTableSectionElement);\n//# sourceMappingURL=HTMLTableSectionElement.js.map","// <blockquote> and <q>\nimport { registerSubclass } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport { reflectProperties } from './enhanceElement';\nexport class HTMLTimeElement extends HTMLElement {\n}\nregisterSubclass('time', HTMLTimeElement);\n// Reflected Properties\n// HTMLTimeElement.dateTime => string, reflected attribute\nreflectProperties([{ dateTime: [''] }], HTMLTimeElement);\n//# sourceMappingURL=HTMLTimeElement.js.map","import { CharacterData } from './CharacterData';\n// @see https://developer.mozilla.org/en-US/docs/Web/API/Text\nexport class Text extends CharacterData {\n    constructor(data, ownerDocument, overrideIndex) {\n        super(data, 3 /* TEXT_NODE */, '#text', ownerDocument, overrideIndex);\n    }\n    // Unimplemented Properties\n    // Text.isElementContentWhitespace – https://developer.mozilla.org/en-US/docs/Web/API/Text/isElementContentWhitespace\n    // Text.wholeText – https://developer.mozilla.org/en-US/docs/Web/API/Text/wholeText\n    // Text.assignedSlot – https://developer.mozilla.org/en-US/docs/Web/API/Text/assignedSlot\n    /**\n     * textContent getter, retrieves underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     */\n    get textContent() {\n        return this.data;\n    }\n    /**\n     * textContent setter, mutates underlying CharacterData data.\n     * This is a different implmentation than DOMv1-4 APIs, but should be transparent to Frameworks.\n     * @param value new value\n     */\n    set textContent(value) {\n        // Mutation Observation is performed by CharacterData.\n        this.nodeValue = value;\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Node/cloneNode\n     * @return new Text Node with the same data as the Text to clone.\n     */\n    cloneNode() {\n        return this.ownerDocument.createTextNode(this.data);\n    }\n    /**\n     * Breaks Text node into two nodes at the specified offset, keeping both nodes in the tree as siblings.\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Text/splitText\n     * @param offset number position to split text at.\n     * @return Text Node after the offset.\n     */\n    splitText(offset) {\n        const remainderTextNode = new Text(this.data.slice(offset, this.data.length), this.ownerDocument);\n        const parentNode = this.parentNode;\n        this.nodeValue = this.data.slice(0, offset);\n        if (parentNode !== null) {\n            // When this node is attached to the DOM, the remainder text needs to be inserted directly after.\n            const parentChildNodes = parentNode.childNodes;\n            const insertBeforePosition = parentChildNodes.indexOf(this) + 1;\n            const insertBeforeNode = parentChildNodes.length >= insertBeforePosition ? parentChildNodes[insertBeforePosition] : null;\n            return parentNode.insertBefore(remainderTextNode, insertBeforeNode);\n        }\n        return remainderTextNode;\n    }\n}\n//# sourceMappingURL=Text.js.map","import { ParentNode } from './ParentNode';\nimport { store as storeString } from '../strings';\nexport class DocumentFragment extends ParentNode {\n    constructor(ownerDocument, overrideIndex) {\n        super(11 /* DOCUMENT_FRAGMENT_NODE */, '#document-fragment', ownerDocument, overrideIndex);\n        this[8 /* creationFormat */] = [this[7 /* index */], 11 /* DOCUMENT_FRAGMENT_NODE */, storeString(this.nodeName), 0, 0];\n    }\n    /**\n     * @param deep boolean determines if the clone should include a recursive copy of all childNodes.\n     * @return DocumentFragment containing childNode clones of the DocumentFragment requested to be cloned.\n     */\n    cloneNode(deep = false) {\n        const clone = this.ownerDocument.createDocumentFragment();\n        if (deep) {\n            this.childNodes.forEach((child) => clone.appendChild(child.cloneNode(deep)));\n        }\n        return clone;\n    }\n}\n//# sourceMappingURL=DocumentFragment.js.map","import { Element, NS_NAME_TO_CLASS } from './Element';\nimport { HTMLElement } from './HTMLElement';\nimport './HTMLAnchorElement';\nimport './HTMLButtonElement';\nimport './HTMLCanvasElement';\nimport './HTMLDataElement';\nimport './HTMLDataListElement';\nimport './HTMLEmbedElement';\nimport './HTMLFieldSetElement';\nimport './HTMLFormElement';\nimport './HTMLIFrameElement';\nimport './HTMLImageElement';\nimport './HTMLInputElement';\nimport './HTMLLabelElement';\nimport './HTMLLinkElement';\nimport './HTMLMapElement';\nimport './HTMLMeterElement';\nimport './HTMLModElement';\nimport './HTMLOListElement';\nimport './HTMLOptionElement';\nimport './HTMLProgressElement';\nimport './HTMLQuoteElement';\nimport './HTMLScriptElement';\nimport './HTMLSelectElement';\nimport './HTMLSourceElement';\nimport './HTMLStyleElement';\nimport './HTMLTableCellElement';\nimport './HTMLTableColElement';\nimport './HTMLTableElement';\nimport './HTMLTableRowElement';\nimport './HTMLTableSectionElement';\nimport './HTMLTimeElement';\nimport { matchChildElement } from './matchElements';\nimport { Text } from './Text';\nimport { Comment } from './Comment';\nimport { toLower } from '../../utils';\nimport { DocumentFragment } from './DocumentFragment';\nimport { HTML_NAMESPACE } from '../../transfer/TransferrableNodes';\nimport { propagate as propagateEvents } from '../Event';\nimport { propagate as propagateSyncValues } from '../SyncValuePropagation';\nimport { propagate as propagateResize } from '../ResizePropagation';\nimport { set as setPhase } from '../phase';\nconst DOCUMENT_NAME = '#document';\nexport class Document extends Element {\n    defaultView;\n    documentElement;\n    body;\n    // Internal variables.\n    postMessage;\n    addGlobalEventListener;\n    removeGlobalEventListener;\n    [58 /* allowTransfer */] = true;\n    constructor(global) {\n        super(9 /* DOCUMENT_NODE */, DOCUMENT_NAME, HTML_NAMESPACE, null);\n        // Element uppercases its nodeName, but Document doesn't.\n        this.nodeName = DOCUMENT_NAME;\n        this.documentElement = this; // TODO(choumx): Should be the <html> element.\n        this.defaultView = Object.assign(global, {\n            document: this,\n            addEventListener: this.addEventListener.bind(this),\n            removeEventListener: this.removeEventListener.bind(this),\n        });\n    }\n    /**\n     * Observing the Document indicates it's attached to a main thread\n     * version of the document.\n     *\n     * Each mutation needs to be transferred, synced values need to propagate.\n     */\n    [59 /* observe */]() {\n        setPhase(1 /* Hydrating */);\n        propagateEvents(this.defaultView);\n        propagateSyncValues(this.defaultView);\n        propagateResize(this.defaultView);\n    }\n    /**\n     * Hydrate\n     * @param strings\n     * @param skeleton\n     */\n    [64 /* hydrateNode */](strings, skeleton) {\n        switch (skeleton[0 /* nodeType */]) {\n            case 3 /* TEXT_NODE */:\n                return new Text(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            case 8 /* COMMENT_NODE */:\n                return new Comment(strings[skeleton[5 /* textContent */]], this, skeleton[7 /* index */]);\n            default:\n                const namespaceURI = strings[skeleton[6 /* namespaceURI */]] || HTML_NAMESPACE;\n                const localName = strings[skeleton[1 /* localOrNodeName */]];\n                const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n                const node = new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this, skeleton[7 /* index */]);\n                (skeleton[2 /* attributes */] || []).forEach((attribute) => \n                // AttributeNamespaceURI = strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE\n                node.setAttributeNS(strings[attribute[0]] !== 'null' ? strings[attribute[0]] : HTML_NAMESPACE, strings[attribute[1]], strings[attribute[2]]));\n                (skeleton[4 /* childNodes */] || []).forEach((child) => node.appendChild(this[64 /* hydrateNode */](strings, child)));\n                return node;\n        }\n    }\n    createElement(name) {\n        return this.createElementNS(HTML_NAMESPACE, toLower(name));\n    }\n    createElementNS(namespaceURI, localName) {\n        const constructor = NS_NAME_TO_CLASS[`${namespaceURI}:${localName}`] || HTMLElement;\n        return new constructor(1 /* ELEMENT_NODE */, localName, namespaceURI, this);\n    }\n    /**\n     * Note: Unlike DOM, Event subclasses (e.g. MouseEvent) are not instantiated based on `type`.\n     * @param type\n     */\n    createEvent(type) {\n        return new Event(type, { bubbles: false, cancelable: false });\n    }\n    createTextNode(text) {\n        return new Text(text, this);\n    }\n    createComment(text) {\n        return new Comment(text, this);\n    }\n    createDocumentFragment() {\n        return new DocumentFragment(this);\n    }\n    /**\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementById\n     * @return Element with matching id attribute.\n     */\n    getElementById(id) {\n        return matchChildElement(this.body, (element) => element.id === id);\n    }\n}\n//# sourceMappingURL=Document.js.map","import { get } from './nodes';\n/**\n * When an event is dispatched from the main thread, it needs to be propagated in the worker thread.\n * Propagate adds an event listener to the worker global scope and uses the WorkerDOM Node.dispatchEvent\n * method to dispatch the transfered event in the worker thread.\n */\nexport function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 4 /* SYNC */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        const node = get(sync[7 /* index */]);\n        if (node) {\n            node.ownerDocument[58 /* allowTransfer */] = false;\n            // Modify the private backing ivar of `value` property to avoid mutation/sync cycle.\n            node.value = sync[21 /* value */];\n            node.ownerDocument[58 /* allowTransfer */] = true;\n        }\n    });\n}\n//# sourceMappingURL=SyncValuePropagation.js.map","export function propagate(global) {\n    const document = global.document;\n    if (!document.addGlobalEventListener) {\n        return;\n    }\n    document.addGlobalEventListener('message', ({ data }) => {\n        if (data[12 /* type */] !== 5 /* RESIZE */) {\n            return;\n        }\n        const sync = data[40 /* sync */];\n        if (sync) {\n            global.innerWidth = sync[0];\n            global.innerHeight = sync[1];\n        }\n    });\n}\n//# sourceMappingURL=ResizePropagation.js.map","const frameDuration = 1000 / 60;\nlet last = 0;\nlet id = 0;\nlet queue = [];\n/**\n * Schedules the accumulated callbacks to be fired 16ms after the last round.\n */\nfunction scheduleNext() {\n    const now = Date.now();\n    const next = Math.round(Math.max(0, frameDuration - (Date.now() - last)));\n    last = now + next;\n    setTimeout(function () {\n        var cp = queue.slice(0);\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0;\n        for (var i = 0; i < cp.length; i++) {\n            if (cp[i].cancelled) {\n                continue;\n            }\n            try {\n                cp[i].callback(last);\n            }\n            catch (e) {\n                setTimeout(function () {\n                    throw e;\n                }, 0);\n            }\n        }\n    }, next);\n}\nexport function rafPolyfill(callback) {\n    if (queue.length === 0) {\n        scheduleNext();\n    }\n    if (id === Number.MAX_SAFE_INTEGER) {\n        id = 0;\n    }\n    queue.push({\n        handle: ++id,\n        callback,\n        cancelled: false,\n    });\n    return id;\n}\nexport function cafPolyfill(handle) {\n    for (let i = 0; i < queue.length; i++) {\n        if (queue[i].handle === handle) {\n            queue[i].cancelled = true;\n            return;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrame.js.map","import { Element, registerSubclass } from './Element';\nimport { SVG_NAMESPACE } from '../../transfer/TransferrableNodes';\nexport class SVGElement extends Element {\n    constructor(nodeType, localName, namespaceURI, ownerDocument) {\n        super(nodeType, localName, SVG_NAMESPACE, ownerDocument);\n        // Element uppercases its nodeName, but SVG elements don't.\n        this.nodeName = localName;\n    }\n}\nregisterSubclass('svg', SVGElement, SVG_NAMESPACE);\n//# sourceMappingURL=SVGElement.js.map","import { AMP } from './amp/amp';\nimport { callFunctionMessageHandler, exportFunction } from './function';\nimport { CharacterData } from './dom/CharacterData';\nimport { Comment } from './dom/Comment';\nimport { deleteGlobals } from './amp/delete-globals';\nimport { Document } from './dom/Document';\nimport { DocumentFragment } from './dom/DocumentFragment';\nimport { DOMTokenList } from './dom/DOMTokenList';\nimport { Element } from './dom/Element';\nimport { Event as WorkerDOMEvent } from './Event';\nimport { HTMLAnchorElement } from './dom/HTMLAnchorElement';\nimport { HTMLButtonElement } from './dom/HTMLButtonElement';\nimport { HTMLCanvasElement } from './dom/HTMLCanvasElement';\nimport { HTMLDataElement } from './dom/HTMLDataElement';\nimport { HTMLDataListElement } from './dom/HTMLDataListElement';\nimport { HTMLElement } from './dom/HTMLElement';\nimport { HTMLEmbedElement } from './dom/HTMLEmbedElement';\nimport { HTMLFieldSetElement } from './dom/HTMLFieldSetElement';\nimport { HTMLFormElement } from './dom/HTMLFormElement';\nimport { HTMLIFrameElement } from './dom/HTMLIFrameElement';\nimport { HTMLImageElement } from './dom/HTMLImageElement';\nimport { HTMLInputElement } from './dom/HTMLInputElement';\nimport { HTMLLabelElement } from './dom/HTMLLabelElement';\nimport { HTMLLinkElement } from './dom/HTMLLinkElement';\nimport { HTMLMapElement } from './dom/HTMLMapElement';\nimport { HTMLMeterElement } from './dom/HTMLMeterElement';\nimport { HTMLModElement } from './dom/HTMLModElement';\nimport { HTMLOListElement } from './dom/HTMLOListElement';\nimport { HTMLOptionElement } from './dom/HTMLOptionElement';\nimport { HTMLProgressElement } from './dom/HTMLProgressElement';\nimport { HTMLQuoteElement } from './dom/HTMLQuoteElement';\nimport { HTMLScriptElement } from './dom/HTMLScriptElement';\nimport { HTMLSelectElement } from './dom/HTMLSelectElement';\nimport { HTMLSourceElement } from './dom/HTMLSourceElement';\nimport { HTMLStyleElement } from './dom/HTMLStyleElement';\nimport { HTMLTableCellElement } from './dom/HTMLTableCellElement';\nimport { HTMLTableColElement } from './dom/HTMLTableColElement';\nimport { HTMLTableElement } from './dom/HTMLTableElement';\nimport { HTMLTableRowElement } from './dom/HTMLTableRowElement';\nimport { HTMLTableSectionElement } from './dom/HTMLTableSectionElement';\nimport { HTMLTimeElement } from './dom/HTMLTimeElement';\nimport { initialize } from './initialize';\nimport { MutationObserver } from './MutationObserver';\nimport { rafPolyfill, cafPolyfill } from './AnimationFrame';\nimport { SVGElement } from './dom/SVGElement';\nimport { Text } from './dom/Text';\nimport { wrap as longTaskWrap } from './long-task';\nconst globalScope = {\n    innerWidth: 0,\n    innerHeight: 0,\n    CharacterData,\n    Comment,\n    Document,\n    DocumentFragment,\n    DOMTokenList,\n    Element,\n    HTMLAnchorElement,\n    HTMLButtonElement,\n    HTMLCanvasElement,\n    HTMLDataElement,\n    HTMLDataListElement,\n    HTMLElement,\n    HTMLEmbedElement,\n    HTMLFieldSetElement,\n    HTMLFormElement,\n    HTMLIFrameElement,\n    HTMLImageElement,\n    HTMLInputElement,\n    HTMLLabelElement,\n    HTMLLinkElement,\n    HTMLMapElement,\n    HTMLMeterElement,\n    HTMLModElement,\n    HTMLOListElement,\n    HTMLOptionElement,\n    HTMLProgressElement,\n    HTMLQuoteElement,\n    HTMLScriptElement,\n    HTMLSelectElement,\n    HTMLSourceElement,\n    HTMLStyleElement,\n    HTMLTableCellElement,\n    HTMLTableColElement,\n    HTMLTableElement,\n    HTMLTableRowElement,\n    HTMLTableSectionElement,\n    HTMLTimeElement,\n    SVGElement,\n    Text,\n    Event: WorkerDOMEvent,\n    MutationObserver,\n    requestAnimationFrame: self.requestAnimationFrame || rafPolyfill,\n    cancelAnimationFrame: self.cancelAnimationFrame || cafPolyfill,\n};\nconst noop = () => void 0;\n// WorkerDOM.Document.defaultView ends up being the window object.\n// React requires the classes to exist off the window object for instanceof checks.\nexport const workerDOM = (function (postMessage, addEventListener, removeEventListener) {\n    const document = new Document(globalScope);\n    // TODO(choumx): Avoid polluting Document's public API.\n    document.postMessage = postMessage;\n    document.addGlobalEventListener = addEventListener;\n    document.removeGlobalEventListener = removeEventListener;\n    document.isConnected = true;\n    document.appendChild((document.body = document.createElement('body')));\n    // TODO(choumx): Remove once defaultView contains all native worker globals.\n    // Canvas's use of native OffscreenCanvas checks the existence of the property\n    // on the WorkerDOMGlobalScope.\n    globalScope.OffscreenCanvas = self['OffscreenCanvas'];\n    globalScope.ImageBitmap = self['ImageBitmap'];\n    return document.defaultView;\n})(postMessage.bind(self) || noop, addEventListener.bind(self) || noop, removeEventListener.bind(self) || noop);\n// Modify global scope by removing disallowed properties and wrapping `fetch()`.\n(function (global) {\n    deleteGlobals(global);\n    // Wrap global.fetch() with our longTask API.\n    const originalFetch = global['fetch'];\n    if (originalFetch) {\n        try {\n            Object.defineProperty(global, 'fetch', {\n                enumerable: true,\n                writable: true,\n                configurable: true,\n                value: longTaskWrap(workerDOM.document, originalFetch.bind(global)),\n            });\n        }\n        catch (e) {\n            console.warn(e);\n        }\n    }\n})(self);\n// Offer APIs like AMP.setState() on the global scope.\nself.AMP = new AMP(workerDOM.document);\n// Allows for function invocation\nself.exportFunction = exportFunction;\naddEventListener('message', (evt) => callFunctionMessageHandler(evt, workerDOM.document));\nexport const hydrate = initialize;\n//# sourceMappingURL=index.amp.js.map","import { store as storeString } from './strings';\nimport { appendKeys as addCssKeys } from './css/CSSStyleDeclaration';\nimport { appendGlobalEventProperties } from './dom/HTMLElement';\nimport { initializeStorage } from './initialize-storage';\nexport function initialize(document, strings, hydrateableNode, cssKeys, globalEventHandlerKeys, [innerWidth, innerHeight], localStorageInit, sessionStorageInit) {\n    addCssKeys(cssKeys);\n    appendGlobalEventProperties(globalEventHandlerKeys);\n    strings.forEach(storeString);\n    (hydrateableNode[4 /* childNodes */] || []).forEach((child) => document.body.appendChild(document[64 /* hydrateNode */](strings, child)));\n    const window = document.defaultView;\n    window.innerWidth = innerWidth;\n    window.innerHeight = innerHeight;\n    initializeStorage(document, localStorageInit, sessionStorageInit);\n}\n//# sourceMappingURL=initialize.js.map","import { createStorage } from './Storage';\nexport function initializeStorage(document, localStorageInit, sessionStorageInit) {\n    const window = document.defaultView;\n    if (localStorageInit.storage) {\n        window.localStorage = createStorage(document, 0 /* Local */, localStorageInit.storage);\n    }\n    else {\n        console.warn(localStorageInit.errorMsg);\n    }\n    if (sessionStorageInit.storage) {\n        window.sessionStorage = createStorage(document, 1 /* Session */, sessionStorageInit.storage);\n    }\n    else {\n        console.warn(sessionStorageInit.errorMsg);\n    }\n}\n//# sourceMappingURL=initialize-storage.js.map"],"names":["store$1","value","mapping","has","get","transfer","document","phase","pending","pendingMutations","concat","mutation","Promise","resolve","then","_","buffer","Uint16Array","consumeNodes","reduce","acc","mutate","record","transferable","forEach","observer","t","target","parentNode","observerTarget","pushMutation","_querySelectorAll","node","selector","selectorBracketIndexes","indexOf","selectorHasAttr","elementSelector","substring","attrSelector","matcher","element","id","substr","matchAttrReference","classList","contains","localName","toLowerCase","matchChildrenElements","filter","synchronizedAccessor","defineOn","accessorKey","propertyName","Object","defineProperty","prototype","enumerable","configurable","set","decodeEntities","html","replace","s","numericEntity","namedEntity","code","charAt","parseInt","isNaN","String","fromCodePoint","RESERVED_CHARACTERS","definePropertyBackedAttributes","attributes","sub","create","assign","serializeTransferrableObject","args","serialized","i","length","arg","num","push","f32","u16","store","Array","isArray","serializedArray","_i","_typeof","serializedObject","_i2","retrieveImageBitmap","image","canvas","callIndex","indexTracker","ownerDocument","addGlobalEventListener","messageHandler","data","removeGlobalEventListener","createStorage","location","storage","define","keys","this","n","key","_value","stringValue","_this","execute","promise","result","reason","ElementKind","count","Map","AMP","getState","event","message","setState","state","stringified","JSON","stringify","e","exportedFunctions","observers","pushRecord","callback","takeRecords","MutationObserver","options","observe","disconnect","index","splice","records","propagate","propagate$3","property","childNodes","child","Node","nodeType","nodeName","overrideIndex","isConnected","storeOverrideNodeMapping","Math","max","f","getTextContent","textContent","childNode","parentChildNodes","hasChildNodes","otherNode","includes","insertBefore","slice","referenceNode","remove","addedNodes","nextSibling","type","appendChild","previousSibling","removeChild","replaceChild","newChild","oldChild","removedNodes","replaceWith","nodes","parent","nodeIterator","currentNode","CharacterData","storeString","oldValue","Comment","nodeValue","cloneNode","createComment","ALLOWLISTED_GLOBALS","ArrayBuffer","BigInt","BigInt64Array","BigUint64Array","Boolean","Cache","CustomEvent","DataView","Date","Error","EvalError","Event","EventTarget","Float32Array","Float64Array","Function","Infinity","Int16Array","Int32Array","Int8Array","Intl","NaN","Number","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","Symbol","SyntaxError","TextDecoder","TextEncoder","TypeError","URIError","URL","Uint32Array","Uint8Array","Uint8ClampedArray","WeakMap","WeakSet","WebAssembly","WebSocket","XMLHttpRequest","atob","addEventListener","removeEventListener","btoa","caches","clearInterval","clearTimeout","console","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","escape","fetch","indexedDB","isFinite","navigator","onerror","onrejectionhandled","onunhandledrejection","parseFloat","performance","requestAnimationFrame","cancelAnimationFrame","self","setTimeout","setInterval","unescape","tagNameConditionPredicate","tagNames","tagName","elementPredicate","conditionPredicate","matchingElements","matchChildElement","returnValue","children","some","matchNearestParent","equalPos","selectorLength","caseInsensitive","endPos","equalSuffix","attrString","possibleSuffixes","rawAttrValue","getAttribute","casedValue","rawValue","casedAttrValue","split","startsWith","endsWith","hasAttribute","ParentNode","find","querySelector","matches","querySelectorAll","WHITESPACE_REGEX","DOMTokenList","attributeName","bind","join","collection","trim","newValue","item","token","add","tokens","newToken","delete","toggle","force","test","undefined","namespaceURI","toString","map","attr","name","matchPredicate","CSSStyleDeclaration","getPropertyValue","removeProperty","mutated","cssText","setProperty","values","reflectProperties","properties","pair","defaultValue","keywords","isBooleanAttribute","attributeValue","castableValue","setAttribute","removeAttribute","kMarkupPattern","kAttributePattern","kSelfClosingElements","AREA","BASE","BR","COL","HR","IMG","INPUT","LINK","META","PARAM","SOURCE","TRACK","WBR","kElementsClosedByOpening","LI","DT","DD","P","ADDRESS","ARTICLE","ASIDE","BLOCKQUOTE","DETAILS","DIV","DL","FIELDSET","FIGCAPTION","FIGURE","FOOTER","FORM","H1","H2","H3","H4","H5","H6","HEADER","MAIN","NAV","OL","PRE","SECTION","TABLE","UL","RT","RP","OPTGROUP","OPTION","THEAD","TBODY","TFOOT","TR","TD","TH","kElementsClosedByClosing","A","B","I","kBlockTextElements","SCRIPT","NOSCRIPT","STYLE","__proto__","amp","lt","gt","quot","opts","scoped","timeStamp","isTrusted","eventPhase","defaultPrevented","currentTarget","cancelBubble","cancelable","bubbles","changedTouches","touches","offsetY","offsetX","pageY","pageX","stopPropagation","stopImmediatePropagation","preventDefault","initEvent","touchListFromTransfer","touchListKeys","list","touchListKey","numericKey","transferredTouch","identifier","screenX","screenY","clientX","clientY","NS_NAME_TO_CLASS","registerSubclass","subclass","HTML_NAMESPACE","NORMAL","VOID","VOID_ELEMENTS","Element","toUpperCase","_classList","style_","kind","tag","start","attrsToString","contents","innerHTML","outerHTML","parse","rootElement","match","currentParent","root","createElementNS","currentNamespace","stack","lastTextPos","tagsClosed","SVG_NAMESPACE","exec","commentContents","beginningSlash","matchAttributes","endSlash","text","createTextNode","lastIndex","normalizedTagName","pop","attMatch","childToAppend","closeMarkup","wrapper","firstChild","setAttributeNS","getAttributeNS","removeAttributeNS","hasAttributeNS","hasAttributes","valueAsString","propertyBacked","constructor","matchAttrPredicate","attributeNamespace","findIndex","getElementsByClassName","names","inputClassList","inputClassName","getElementsByTagName","lowerTagName","getElementsByName","stringName","deep","clone","getBoundingClientRectAsync","left","top","right","bottom","x","y","width","height","_this3","transferredBoundingClientRect","click","dispatchEvent","scrollIntoView","class","el","style","HTMLElement","accessKey","contentEditable","dir","lang","title","draggable","hidden","noModule","spellcheck","translate","HTMLAnchorElement","_relList","href","rel","relList","hreflang","media","HTMLButtonElement","formAction","formEnctype","formMethod","formTarget","autofocus","disabled","CanvasGradient","addColorStop","offset","color","arguments","CanvasPattern","setTransform","OffscreenCanvasPolyfill","context","getContext","contextType","OffscreenCanvasRenderingContext2DPolyfill","objectIndex","canvasElement","lineDash","fnName","createObjectReference","objectId","creationMethod","creationArgs","clearRect","w","h","fillRect","strokeRect","fillText","maxWidth","moveTo","lineTo","closePath","stroke","restore","save","resetTransform","rotate","angle","transform","a","b","c","d","scale","beginPath","strokeText","arc","radius","startAngle","endAngle","anticlockwise","arcTo","x1","y1","x2","y2","ellipse","radiusX","radiusY","rotation","bezierCurveTo","cp1x","cp1y","cp2x","cp2y","rect","quadraticCurveTo","cpx","cpy","setLineDash","getLineDash","clip","pathOrFillRule","fillRule","fill","transformOrA","bOrC","cOrD","dOrE","eOrF","createLinearGradient","x0","y0","gradientId","createRadialGradient","r0","r1","createPattern","repetition","patternId","drawImage","dx","dy","createImageData","getImageData","putImageData","isPointInPath","isPointInStroke","measureText","FakeNativeCanvasPattern","instance","pattern","deferredUpgrades","CanvasRenderingContext2DShim","queue","implementation","upgraded","polyfillUsed","unresolvedCalls","goodImplementation","OffscreenCanvas","defaultView","getOffscreenCanvasAsync","deferred","isTestMode","upgradePromise","maybeUpgradeImplementation","degradeImplementation","flushQueue","call","isSetter","delegateFunc","delegateSetter","delegateGetter","segments","_this2","ImageBitmap","_this4","antiClockwise","path","pathOrX","xOrY","yOrFillRule","imagedataOrWidth","sx","sy","sw","sh","imageData","dirtyX","dirtyY","dirtyWidth","dirtyHeight","HTMLCanvasElement","HTMLDataElement","HTMLDataListElement","HTMLEmbedElement","src","MATCHING_CHILD_ELEMENT_TAGNAMES","HTMLFormControlsCollectionMixin","HTMLFieldSetElement","HTMLFormElement","elements","method","action","enctype","acceptCharset","autocomplete","autocapitalize","HTMLIFrameElement","_sandbox","sandbox","allow","allowFullscreen","csp","referrerPolicy","srcdoc","HTMLImageElement","alt","crossOrigin","isMap","sizes","srcset","useMap","HTMLInputLabelsMixin","for","HTMLInputElement","dirtyValue","date","stringToDate","getTime","dateToString","getFullYear","m","getMonth","getDate","str","components","accept","defaultChecked","dirName","formEncType","maxLength","min","multiple","placeholder","readOnly","required","size","step","HTMLLabelElement","htmlFor","getElementById","HTMLLinkElement","as","HTMLMapElement","HTMLMeterElement","high","low","optimum","HTMLModElement","cite","datetime","HTMLOListElement","reversed","HTMLOptionElement","label","selected","defaultSelected","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","charset","async","defer","isOptionPredicate","isSelectedOptionPredicate","HTMLSelectElement","firstSelectedChild","selectedIndex","HTMLSourceElement","HTMLStyleElement","HTMLTableCellElement","_headers","headers","abbr","colSpan","rowSpan","scope","HTMLTableColElement","span","removeElement","insertBeforeElementsWithTagName","insertBeforeElement","HTMLTableElement","newElement","caption","firstElementChild","tHead","tFoot","TABLE_SECTION_TAGNAMES","indexInAncestor","isValidAncestor","rows","HTMLTableRowElement","deleteCell","cell","cells","insertCell","td","createElement","HTMLTableSectionElement","deleteRow","insertRow","tr","HTMLTimeElement","dateTime","Text","splitText","remainderTextNode","insertBeforePosition","DocumentFragment","createDocumentFragment","Document","global","DOCUMENT_NAME","documentElement","body","postMessage","propagate$2","newPhase","g","l","keyCode","propagate$1","sync","innerWidth","innerHeight","strings","skeleton","attribute","createEvent","frameDuration","last","SVGElement","globalScope","WorkerDOMEvent","rafPolyfill","scheduleNext","now","next","round","cp","cancelled","MAX_SAFE_INTEGER","handle","cafPolyfill","noop","workerDOM","deleteGlobals","current","getOwnPropertyNames","prop","hasOwnProperty","object","getPrototypeOf","func","originalFetch","writable","apply","exportFunction","fn","evt","callFunctionMessageHandler","msg","fnIdentifier","fnArguments","err","errorMessage","initialize","hydrateableNode","cssKeys","globalEventHandlerKeys","localStorageInit","sessionStorageInit","appendKeys","keysToAppend","previousPrototypeLength","hyphenatedKey","defineProperties","appendGlobalEventProperties","normalizedKey","stored","initializeStorage","window","localStorage","sessionStorage"],"mappings":"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"}